{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1SKEZWgQiWKVlIn2g-pNfUstjpnxA31mZ","timestamp":1669931990365}],"authorship_tag":"ABX9TyMltxgkBBzRm1+DJ2KCxnBN"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5lxN6nclQ4Bh","executionInfo":{"status":"ok","timestamp":1669909410665,"user_tz":-60,"elapsed":4502,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"905134d8-b6cb-4166-bbec-fae5596879b3"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: yellowbrick in /usr/local/lib/python3.8/dist-packages (1.5)\n","Requirement already satisfied: cycler>=0.10.0 in /usr/local/lib/python3.8/dist-packages (from yellowbrick) (0.11.0)\n","Requirement already satisfied: numpy>=1.16.0 in /usr/local/lib/python3.8/dist-packages (from yellowbrick) (1.21.6)\n","Requirement already satisfied: scipy>=1.0.0 in /usr/local/lib/python3.8/dist-packages (from yellowbrick) (1.7.3)\n","Requirement already satisfied: matplotlib!=3.0.0,>=2.0.2 in /usr/local/lib/python3.8/dist-packages (from yellowbrick) (3.2.2)\n","Requirement already satisfied: scikit-learn>=1.0.0 in /usr/local/lib/python3.8/dist-packages (from yellowbrick) (1.0.2)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib!=3.0.0,>=2.0.2->yellowbrick) (2.8.2)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib!=3.0.0,>=2.0.2->yellowbrick) (3.0.9)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib!=3.0.0,>=2.0.2->yellowbrick) (1.4.4)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.8/dist-packages (from python-dateutil>=2.1->matplotlib!=3.0.0,>=2.0.2->yellowbrick) (1.15.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.8/dist-packages (from scikit-learn>=1.0.0->yellowbrick) (3.1.0)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.8/dist-packages (from scikit-learn>=1.0.0->yellowbrick) (1.2.0)\n"]}],"source":["!pip install yellowbrick"]},{"cell_type":"markdown","source":["## Titanic Dataset\n"],"metadata":{"id":"1ro2bJlbR60P"}},{"cell_type":"code","source":["# Import necessary libraries\n","import pandas as pd\n","import numpy as np\n","from matplotlib import pyplot as plt\n","import seaborn as sns \n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.svm import SVC\n","from lightgbm import LGBMClassifier\n","from sklearn.model_selection import train_test_split, cross_validate, validation_curve, GridSearchCV\n","from sklearn.metrics import accuracy_score, classification_report, roc_auc_score, confusion_matrix, classification_report, plot_roc_curve\n","from sklearn.preprocessing import LabelEncoder\n"],"metadata":{"id":"RlAsgAB4TOJx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"Ii3E-7rQSNTx"}},{"cell_type":"code","source":["train_path = r'./train.csv'\n","test_path = r'./test.csv'"],"metadata":{"id":"fVxWwOMNSMix"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_csv = pd.read_csv(train_path)\n","test_csv = pd.read_csv(test_path)"],"metadata":{"id":"a1cKGhnnSLN2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_df = pd.DataFrame(train_csv)\n","\n","test_df = pd.DataFrame(test_csv)"],"metadata":{"id":"pb8Q6s87TePH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":144},"id":"NPQdxPnaTyYt","executionInfo":{"status":"ok","timestamp":1669909423406,"user_tz":-60,"elapsed":28,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"9be4b73e-9835-4add-b552-7d5351a20961"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Pclass                                               Name  \\\n","0            1       3                            Braund, Mr. Owen Harris   \n","1            2       1  Cumings, Mrs. John Bradley (Florence Briggs Th...   \n","2            3       3                             Heikkinen, Miss. Laina   \n","\n","      Sex   Age  SibSp  Parch            Ticket     Fare Cabin Embarked  \n","0    male  22.0      1      0         A/5 21171   7.2500   NaN        S  \n","1  female  38.0      1      0          PC 17599  71.2833   C85        C  \n","2  female  26.0      0      0  STON/O2. 3101282   7.9250   NaN        S  "],"text/html":["\n","  <div id=\"df-614a0ca4-2798-4867-af9b-66a5b2516c8c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-614a0ca4-2798-4867-af9b-66a5b2516c8c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-614a0ca4-2798-4867-af9b-66a5b2516c8c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-614a0ca4-2798-4867-af9b-66a5b2516c8c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["test_df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":144},"id":"QH_BOJnCU6Ml","executionInfo":{"status":"ok","timestamp":1669896735731,"user_tz":-60,"elapsed":1011,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"789c6f2f-b30f-4126-fae0-dc04e00d4d91"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Pclass                              Name     Sex   Age  SibSp  \\\n","0          892       3                  Kelly, Mr. James    male  34.5      0   \n","1          893       3  Wilkes, Mrs. James (Ellen Needs)  female  47.0      1   \n","2          894       2         Myles, Mr. Thomas Francis    male  62.0      0   \n","\n","   Parch  Ticket    Fare Cabin Embarked  \n","0      0  330911  7.8292   NaN        Q  \n","1      0  363272  7.0000   NaN        S  \n","2      0  240276  9.6875   NaN        Q  "],"text/html":["\n","  <div id=\"df-46623f2b-e4f2-4c2b-9506-3ca9e2f327b4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>3</td>\n","      <td>Kelly, Mr. James</td>\n","      <td>male</td>\n","      <td>34.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330911</td>\n","      <td>7.8292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>3</td>\n","      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n","      <td>female</td>\n","      <td>47.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>363272</td>\n","      <td>7.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>2</td>\n","      <td>Myles, Mr. Thomas Francis</td>\n","      <td>male</td>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>240276</td>\n","      <td>9.6875</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-46623f2b-e4f2-4c2b-9506-3ca9e2f327b4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-46623f2b-e4f2-4c2b-9506-3ca9e2f327b4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-46623f2b-e4f2-4c2b-9506-3ca9e2f327b4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["survived = train_df[['Survived']]"],"metadata":{"id":"WzeEe5casPYU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_df = train_df.drop('Survived', axis=1)"],"metadata":{"id":"RBesS0INsipA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_df.shape, test_df.shape, survived.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f8w3KaZWsxc4","executionInfo":{"status":"ok","timestamp":1669898499551,"user_tz":-60,"elapsed":538,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"917d5c16-6f5b-4675-fb89-19f603e2fad1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((891, 11), (418, 11), (891, 1))"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["train_test = pd.concat([train_df, test_df],  ignore_index=True)"],"metadata":{"id":"tUpQG1r8tUV4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3L0Ib79st9b6","executionInfo":{"status":"ok","timestamp":1669898819016,"user_tz":-60,"elapsed":1459,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"10ec8dfb-7b52-49f5-b9ff-27a2468c7b37"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1309, 11)"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["## Exploratory Data Analysis\n"],"metadata":{"id":"vj9xJcUnVL_6"}},{"cell_type":"code","source":["def dataframe_check(df):\n","\n","  print('*' * 20, 'head'.upper(), '*' * 20)\n","  print(df.head())\n","\n","  print('*' * 20, 'shape'.upper(), '*' * 20)\n","  print(df.shape)\n","\n","  print('*'* 20, 'info'.upper(), '*' * 20)\n","  print(df.info())\n","\n","  print('*'* 20, 'dtypes'.upper(), '*' * 20)\n","  print(df.dtypes)\n","\n","  print('*'* 20, 'columns'.upper(), '*' * 20)\n","  print(df.columns)\n","\n","  print('*'* 20, 'Any null values'.upper(), '*' * 20)\n","  print(df.isnull().values.any())\n","\n","  print('*'* 20, 'null values'.upper(), '*' * 20)\n","  print(df.isnull().sum().sort_values(ascending=False))\n","\n","  print('\\n', '*' * 20, 'descriptive statistics'.upper(), 20 * '*')\n","  print(df.describe())\n","\n"],"metadata":{"id":"_NQF3NyYwVsL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dataframe_check(train_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0bc1mfvp7bbl","executionInfo":{"status":"ok","timestamp":1669902342667,"user_tz":-60,"elapsed":11,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"d43bfe09-9c6b-4aa3-9e04-7b994fe8d6ec"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["******************** HEAD ********************\n","   PassengerId  Pclass                                               Name  \\\n","0            1       3                            Braund, Mr. Owen Harris   \n","1            2       1  Cumings, Mrs. John Bradley (Florence Briggs Th...   \n","2            3       3                             Heikkinen, Miss. Laina   \n","3            4       1       Futrelle, Mrs. Jacques Heath (Lily May Peel)   \n","4            5       3                           Allen, Mr. William Henry   \n","\n","      Sex   Age  SibSp  Parch            Ticket     Fare Cabin Embarked  \n","0    male  22.0      1      0         A/5 21171   7.2500   NaN        S  \n","1  female  38.0      1      0          PC 17599  71.2833   C85        C  \n","2  female  26.0      0      0  STON/O2. 3101282   7.9250   NaN        S  \n","3  female  35.0      1      0            113803  53.1000  C123        S  \n","4    male  35.0      0      0            373450   8.0500   NaN        S  \n","******************** SHAPE ********************\n","(1309, 11)\n","******************** INFO ********************\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1309 entries, 0 to 1308\n","Data columns (total 11 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  1309 non-null   int64  \n"," 1   Pclass       1309 non-null   int64  \n"," 2   Name         1309 non-null   object \n"," 3   Sex          1309 non-null   object \n"," 4   Age          1046 non-null   float64\n"," 5   SibSp        1309 non-null   int64  \n"," 6   Parch        1309 non-null   int64  \n"," 7   Ticket       1309 non-null   object \n"," 8   Fare         1308 non-null   float64\n"," 9   Cabin        295 non-null    object \n"," 10  Embarked     1307 non-null   object \n","dtypes: float64(2), int64(4), object(5)\n","memory usage: 112.6+ KB\n","None\n","******************** DTYPES ********************\n","PassengerId      int64\n","Pclass           int64\n","Name            object\n","Sex             object\n","Age            float64\n","SibSp            int64\n","Parch            int64\n","Ticket          object\n","Fare           float64\n","Cabin           object\n","Embarked        object\n","dtype: object\n","******************** COLUMNS ********************\n","Index(['PassengerId', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp', 'Parch',\n","       'Ticket', 'Fare', 'Cabin', 'Embarked'],\n","      dtype='object')\n","******************** ANY NULL VALUES ********************\n","True\n","* 20 NULL VALUES ********************\n","Cabin          1014\n","Age             263\n","Embarked          2\n","Fare              1\n","PassengerId       0\n","Pclass            0\n","Name              0\n","Sex               0\n","SibSp             0\n","Parch             0\n","Ticket            0\n","dtype: int64\n","\n"," ******************** DESCRIPTIVE STATISTICS ********************\n","       PassengerId       Pclass          Age        SibSp        Parch  \\\n","count  1309.000000  1309.000000  1046.000000  1309.000000  1309.000000   \n","mean    655.000000     2.294882    29.881138     0.498854     0.385027   \n","std     378.020061     0.837836    14.413493     1.041658     0.865560   \n","min       1.000000     1.000000     0.170000     0.000000     0.000000   \n","25%     328.000000     2.000000    21.000000     0.000000     0.000000   \n","50%     655.000000     3.000000    28.000000     0.000000     0.000000   \n","75%     982.000000     3.000000    39.000000     1.000000     0.000000   \n","max    1309.000000     3.000000    80.000000     8.000000     9.000000   \n","\n","              Fare  \n","count  1308.000000  \n","mean     33.295479  \n","std      51.758668  \n","min       0.000000  \n","25%       7.895800  \n","50%      14.454200  \n","75%      31.275000  \n","max     512.329200  \n"]}]},{"cell_type":"markdown","source":["## Grabbing numerical, categorical and cardinal columns"],"metadata":{"id":"JLOBhpRw-UUl"}},{"cell_type":"code","source":["def grab_col_names(df, cat_th=10, car_th=20):\n","\n","   cat_cols = [col for col in df.columns if df[col].dtypes == 'O']\n","   num_but_cat = [col for col in df.columns if df[col].nunique() < cat_th and df[col].dtypes !='O']\n","   cat_but_car = [col for col in df.columns if df[col].nunique() > car_th and df[col].dtypes == 'O']\n","   cat_cols = cat_cols + num_but_cat\n","   cat_cols = [col for col in cat_cols if col not in cat_but_car]\n","\n","   num_col = [col for col in df.columns if df[col].dtypes != 'O']\n","   num_col = [col for col in num_col if col not in num_but_cat]\n","\n","\n","   print(f'Records: {df.shape[0]}')\n","   print(f'Variables: {df.shape[1]}')\n","   print(f'cat_cols: {len(cat_cols)}')\n","   print(f'num_cols: {len(num_col)}')\n","   print(f'cat_but_car: {len(cat_but_car)}')\n","   print(f'num_but_cat: {len(num_but_cat)}')\n","\n","   return cat_cols, num_col, cat_but_car\n","\n","cat_cols, num_col, cat_but_car = grab_col_names(train_test)\n"],"metadata":{"id":"wJgO8TmR-2uE","executionInfo":{"status":"ok","timestamp":1669910673944,"user_tz":-60,"elapsed":1451,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"57483bba-bf78-40e1-b903-520d129d2c3d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Records: 1309\n","Variables: 11\n","cat_cols: 5\n","num_cols: 3\n","cat_but_car: 3\n","num_but_cat: 3\n"]}]},{"cell_type":"code","source":["cat_cols"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pp9dU7TAYdTM","executionInfo":{"status":"ok","timestamp":1669910721996,"user_tz":-60,"elapsed":854,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"c5c5c8ff-1d25-4e33-9d91-15eec22fea46"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Sex', 'Embarked', 'Pclass', 'SibSp', 'Parch']"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["num_col = [col for col in num_col if 'PassengerId' not in col]\n","num_col"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YPu-G5XMZasi","executionInfo":{"status":"ok","timestamp":1669910731870,"user_tz":-60,"elapsed":690,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"291d2259-c5e3-438f-bdbc-291cdc806817"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Age', 'Fare']"]},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["cat_but_car"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XkNUiG3VZgd2","executionInfo":{"status":"ok","timestamp":1669910740830,"user_tz":-60,"elapsed":638,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"af074128-8095-430b-cb12-b412b2f571d8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Name', 'Ticket', 'Cabin']"]},"metadata":{},"execution_count":60}]},{"cell_type":"markdown","source":["## summary analysis of categorical variables\n"],"metadata":{"id":"sKRM4-TOhMq_"}},{"cell_type":"code","source":["def cat_summary(df, col_name, plot=False):\n","  print('\\n', '*' * 10, col_name.upper(), 10 * '*')\n","  print(pd.DataFrame({col_name.upper(): df[col_name].value_counts(),'RATIO (%)': round(100 * (df[col_name].value_counts() / len(df)), 2)}))\n","\n","  if plot:\n","    sns.countplot(x=df[col_name])\n","    plt.ylabel('COUNT')\n","    plt.xlabel(col_name.upper())\n","    plt.show(block=True)\n"],"metadata":{"id":"nS3Ac1YfrzX6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for col in cat_cols:\n","    cat_summary(train_test, col, plot=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Y83zf9CesG-J","executionInfo":{"status":"ok","timestamp":1669915061673,"user_tz":-60,"elapsed":2005,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"bacf252c-3b65-49c5-d620-10caad0df804"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n"," ********** SEX **********\n","        SEX  RATIO (%)\n","male    843       64.4\n","female  466       35.6\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n"," ********** EMBARKED **********\n","   EMBARKED  RATIO (%)\n","S       914      69.82\n","C       270      20.63\n","Q       123       9.40\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n"," ********** PCLASS **********\n","   PCLASS  RATIO (%)\n","3     709      54.16\n","1     323      24.68\n","2     277      21.16\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n"," ********** SIBSP **********\n","   SIBSP  RATIO (%)\n","0    891      68.07\n","1    319      24.37\n","2     42       3.21\n","4     22       1.68\n","3     20       1.53\n","8      9       0.69\n","5      6       0.46\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n"," ********** PARCH **********\n","   PARCH  RATIO (%)\n","0   1002      76.55\n","1    170      12.99\n","2    113       8.63\n","3      8       0.61\n","5      6       0.46\n","4      6       0.46\n","6      2       0.15\n","9      2       0.15\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["## summary analysis of numerical variables"],"metadata":{"id":"UgPssp0fvmP1"}},{"cell_type":"code","source":["def num_summary(dataframe, numerical_col, plot=False):\n","  print('\\n', '*' * 10, numerical_col.upper(), '*' * 10)\n","\n","  print(pd.DataFrame({numerical_col.upper(): round(dataframe[numerical_col].describe().T, 2)}))\n","\n","  if plot:\n","    plt.figure(figsize=(10, 4))\n","    plt.subplot(1, 2, 1)\n","    sns.boxplot(y=dataframe[numerical_col])\n","    plt.ylabel(numerical_col.upper())\n","    plt.subplot(1, 2, 2)\n","    sns.histplot(x=dataframe[numerical_col])\n","    plt.xlabel(numerical_col.upper())\n","    plt.show(block=True)\n","\n","for col in num_col:\n","    num_summary(train_test, col, plot=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":923},"id":"FlSVtoA_VGFV","executionInfo":{"status":"ok","timestamp":1669916323539,"user_tz":-60,"elapsed":1314,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"ba6314c3-f470-4c70-d878-637d558e7dcc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n"," ********** AGE **********\n","           AGE\n","count  1046.00\n","mean     29.88\n","std      14.41\n","min       0.17\n","25%      21.00\n","50%      28.00\n","75%      39.00\n","max      80.00\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n"," ********** FARE **********\n","          FARE\n","count  1308.00\n","mean     33.30\n","std      51.76\n","min       0.00\n","25%       7.90\n","50%      14.45\n","75%      31.28\n","max     512.33\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x288 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAmQAAAEGCAYAAADLxYlwAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3dfbCcVZ3g8e8vuYFEEwzBOylMYIMmq8uMEpwMRnEsCKsD6BjcQhbKleBG49aghQszw9tu+TLC4uyMgO4GFsEhTuFEBmUIDDpQJOo4pegFY3i1vINQJBVuMgQIiIkm97d/9OnQ9+a+JbndT/fN91PV1eflebp/F5rm1+c5zzmRmUiSJKk6k6oOQJIk6WBnQiZJklQxEzJJkqSKmZBJkiRVzIRMkiSpYl1VB3AgXvva1+a8efOqDkNSCz3wwAP/lpndVcdxoPz+kg4+I31/dXRCNm/ePHp6eqoOQ1ILRcRTVccwHvz+kg4+I31/eclSkiSpYiZkkiRJFTMhkyRJqpgJmSRJUsVMyNRx1q5dy0knncS6deuqDkWSpHFhQqaOc+WVVwJwxRVXVByJJEnjw4RMHWXt2rXs2rULgF27djlKJkmaEEzI1FHqo2N1jpJJkiaCjl4YVgef+ujYcHVpIuvv76evrw+A2bNnM2mSv6mlicL/mtVRurq6RqxLE1lfXx/nrbyH81besycxkzQxNDUhi4gnI+KhiFgfET2lbVZE3BsRvyjPh5f2iIgvRURvRGyIiLc2MzZ1pssuu2xA/fLLL68oEqkaUw+bxdTDZlUdhqRx1ooRspMzc2FmLir1S4D7MnMBcF+pA5wGLCiPFcB1LYhNHWbJkiV7RsW6uro4+eSTK45IkqQDV8Uly6XAqlJeBZzR0P61rPkRMDMijqwgPrW5+iiZo2NqtoiYHBE/jYi7Sv2YiLi/jOR/IyIOKe2Hlnpv6Z9XZdySOk+zE7IE7omIByJiRWmbnZmbS/kZYHYpzwGebjh3Y2kbICJWRERPRPRs3bq1WXGrjS1ZsoTvfve7jo6pFS4AHmuofwG4OjPnA88By0v7cuC50n51OU6SxqzZCdk7M/Ot1C5Hnh8R72rszMyklrSNWWbekJmLMnNRd3f3OIYqSa+IiLnAe4EbSz2AJcBt5ZDBI/z1kf/bgFPK8ZI0Jk1NyDJzU3neAtwOnAD01S9Fluct5fBNwFENp88tbZJUhWuAPwf6S/0I4PnMrK+10jiKv2eEv/S/UI4fwBF+ScNpWkIWEa+OiBn1MvAe4GFgDbCsHLYMuKOU1wDnlrstFwMvNFzalKSWiYj3AVsy84HxfF1H+CUNp5mLOM0Gbi+j9l3A1zPzOxHxE+DWiFgOPAWcVY6/Gzgd6AVeBj7SxNgkaSQnAu+PiNOBqcBhwLXUbjbqKqNgjaP49RH+jRHRBbwGeLb1YUvqVE1LyDLzCeC4IdqfBU4Zoj2B85sVjySNVWZeClwKEBEnAX+amR+KiL8HzgRWs/cI/zLgh6V/bflOk6QxcaV+SRq7i4ELI6KX2hyxm0r7TcARpf1CXllfUZLGxH1nJGkEmfld4Lul/AS1m5MGH7MD+GBLA5M0oThCJkmSVDETMkmSpIqZkEmSJFXMhEySJKliJmSSJEkVMyGTJEmqmAmZJElSxUzIJEmSKmZCJkmSVDETMkmSpIqZkEmSJFXMhEySJKliJmSSJEkVMyGTJEmqmAmZJElSxUzIJEmSKmZCJkmDRMTUiPhxRPwsIh6JiM+W9psj4pcRsb48Fpb2iIgvRURvRGyIiLdW+xdI6jRdVQcgSW1oJ7AkM1+KiCnADyLi26XvzzLztkHHnwYsKI+3AdeVZ0kaE0fIJGmQrHmpVKeUR45wylLga+W8HwEzI+LIZscpaeIwIZOkIUTE5IhYD2wB7s3M+0vXFeWy5NURcWhpmwM83XD6xtI2+DVXRERPRPRs3bq1qfFL6iwmZJI0hMzcnZkLgbnACRHxe8ClwJuAPwBmARfv42vekJmLMnNRd3f3uMcsqXOZkEnSCDLzeWAdcGpmbi6XJXcCfwOcUA7bBBzVcNrc0iZJY2JCJkmDRER3RMws5WnAu4HH6/PCIiKAM4CHyylrgHPL3ZaLgRcyc3MFoUvqUN5lKUl7OxJYFRGTqf1wvTUz74qItRHRDQSwHvhv5fi7gdOBXuBl4CMVxCypg5mQSdIgmbkBOH6I9iXDHJ/A+c2OS9LE5SVLSZKkipmQSZIkVazpCVlZy+enEXFXqR8TEfeXLUa+ERGHlPZDS7239M9rdmySJEntoBUjZBcAjzXUvwBcnZnzgeeA5aV9OfBcab+6HCdJkjThNTUhi4i5wHuBG0s9gCVAfR+4VdRuHYfa1iOrSvk24JRyvCRJ0oTW7BGya4A/B/pL/Qjg+czcVeqN24vs2Xqk9L9QjpckSZrQmpaQRcT7gC2Z+cA4v657wUmSpAmlmSNkJwLvj4gngdXULlVeC8yMiPr6Z43bi+zZeqT0vwZ4dvCLuhecJEmaaJqWkGXmpZk5NzPnAWcDazPzQ9T2hDuzHLYMuKOU15Q6pX9tWWxRkiRpQqtiHbKLgQsjopfaHLGbSvtNwBGl/ULgkgpikyRJarmWbJ2Umd8FvlvKTwAnDHHMDuCDrYhHkiSpnbhSvyRJUsVMyCRJkipmQiZJklQxEzJJkqSKmZBJkiRVzIRMkgaJiKkR8eOI+FlEPBIRny3tx0TE/RHRGxHfiIhDSvuhpd5b+udVGb+kzmNCJkl72wksyczjgIXAqRGxGPgCcHVmzgeeA5aX45cDz5X2q8txkjRmJmSSNEjWvFSqU8ojqW0Bd1tpXwWcUcpLS53Sf0pERIvClTQBmJBJ0hAiYnJErAe2APcC/wo8n5m7yiEbgTmlPAd4GqD0v0BtJ5LBr7kiInoiomfr1q3N/hMkdRATMkkaQmbuzsyFwFxqu4u8aRxe84bMXJSZi7q7uw84RkkThwmZJI0gM58H1gFvB2ZGRH3LubnAplLeBBwFUPpfAzzb4lAldTATMkkaJCK6I2JmKU8D3g08Ri0xO7Mctgy4o5TXlDqlf21mZusiltTpWrK5uCR1mCOBVRExmdoP11sz866IeBRYHRGfB34K3FSOvwn424joBbYBZ1cRtKTOZUImSYNk5gbg+CHan6A2n2xw+w7ggy0ITdIE5SVLSZKkipmQSZIkVcyETJIkqWImZJIkSRUzIZMkSaqYCZkkSVLFTMgkSZIqZkImSZJUMRMySZKkipmQSZIkVcyETJIkqWImZJIkSRUzIZMkSaqYCZkkSVLFTMgkSZIqZkImSZJUsaYlZBExNSJ+HBE/i4hHIuKzpf2YiLg/Inoj4hsRcUhpP7TUe0v/vGbFJkkjiYijImJdRDxavr8uKO2fiYhNEbG+PE5vOOfS8v3184j4o+qil9SJmjlCthNYkpnHAQuBUyNiMfAF4OrMnA88Bywvxy8HnivtV5fjJKkKu4CLMvNYYDFwfkQcW/quzsyF5XE3QOk7G/hd4FRgZURMriJwSZ2paQlZ1rxUqlPKI4ElwG2lfRVwRikvLXVK/ykREc2KT5KGk5mbM/PBUn4ReAyYM8IpS4HVmbkzM38J9AInND9SSRNFU+eQRcTkiFgPbAHuBf4VeD4zd5VDNvLKl9wc4GmA0v8CcMQQr7kiInoiomfr1q3NDF+SKNMnjgfuL02fiIgNEfHViDi8tO35/ioav9saX8vvL0lDampClpm7M3MhMJfar8U3jcNr3pCZizJzUXd39wHHKEnDiYjpwDeBT2XmduA64A3UpmFsBv56X17P7y9Jw2nJXZaZ+TywDng7MDMiukrXXGBTKW8CjgIo/a8Bnm1FfJI0WERMoZaM3ZKZ3wLIzL7yQ7Mf+AqvXJbc8/1VNH63SdKomnmXZXdEzCzlacC7qc3DWAecWQ5bBtxRymtKndK/NjOzWfFJ0nDK/NWbgMcy84sN7Uc2HPYB4OFSXgOcXe4WPwZYAPy4VfFK6nxdox+y344EVpU7jSYBt2bmXRHxKLA6Ij4P/JTalx7l+W8johfYRu2OJUmqwonAh4GHyjxYgMuAcyJiIbUblJ4EPg6QmY9ExK3Ao9Tu0Dw/M3e3PGpJHatpCVlmbqA2EXZw+xMMcfdRZu4APtiseCQdnCLixMz8l9HaGmXmD4Ch7vK+e4RzrgCu2O9AJR3UXKlf0kT35TG2SVJlRhwhi4g3ZebjpXxoZu5s6FucmT9qdoCStD8i4u3AO4DuiLiwoeswwEVbJbWV0UbIvt5Q/uGgvpXjHIskjadDgOnUfnjOaHhs55UbiySpLYw2hyyGKQ9Vl6S2kZnfA74XETdn5lNVxyNJIxlthCyHKQ9Vl1rilltu4aSTTmL16tVVh6LOcGhE3BAR90TE2vqj6qAkqdFoI2RzI+JL1EbD6mVKfaR93aSm+cpXvgLA9ddfz9lnuzqKRvX3wPXAjYBLUUhqS6MlZH/WUO4Z1De4LjXdLbfcMqC+evVqkzKNZldmXld1EJI0khETssxcNVxfRBw9/uFII6uPjtU5SqYxuDMi/gS4Hdhzp3hmbqsuJEkaaNSFYcut43OA72fmloh4C3AJ8IcM3LtNktpRfUu2xhH/BF5fQSySNKTR1iH738D7gPXAxRHxT8BHgf8F/NfmhydJByYzj6k6BkkazWgjZO8Fjs/MHRFxOPA08HuZ+WTTI5OkcRAR5w7Vnplfa3UskjSc0Za92FH2mCQznwN+YTKmKn3oQx8aUD/33CH/Xys1+oOGxx8CnwHeX2VAkjTYaCNkr4+INQ31YxrrmemXmlrq+OOPH3Cn5XHHHVdhNOoEmfnJxnpEzARcxE5SWxktIVs6qP7XzQpEGovPfOYzA+qf/vSnueuuu6oJRp3qV4DzyiS1ldGWvfjeUO0RcRRwNjBkv9QsL7300oh1abCIuJNXdhaZDPwH4NbqIpKkvY267EVdRHQDHwTOAV5HbU0fqaWmT58+IAmbPn16hdGoQ/xVQ3kX8FRmbqwqGEkayoiT+iNiRkQsK8td/Bh4A3BMZr4hM/+0JRFKDQZfsvzsZz9bTSDqGGWk/3FgBnA48JvRzomIoyJiXUQ8GhGPRMQFpX1WRNwbEb8oz4eX9oiIL0VEb0RsiIi3NvNvkjTxjHaX5RZq6419Hnh9Zl7EGL7MpGZZtGjRnlGx6dOn8/u///sVR6R2FxFnUftB+UHgLOD+iDhzlNN2ARdl5rHAYuD8iDiW2qLY92XmAuC+Ugc4DVhQHisAt2qStE9GS8guBQ4FVgKXRsQbmh+SNLL3vOc9AJx22mkVR6IOcTnwB5m5LDPPBU4A/udIJ2Tm5sx8sJRfBB6jtmPJUqC+pdwq4IxSXgp8LWt+BMyMiCPH/0+RNFGNmJBl5jWZuZhX7rb8B+B1EXFxRPz7pkcnDeH222vTF2+77baKI1GHmJSZWxrqzzL6j9E9ImIecDxwPzA7MzeXrmeA2aU8h9rC2XUbS5skjcloc8iOBsjMJzLzysx8M7AIOAy4uwXxSQPccccdZNZumMtM7rzzzoojUgf4TkT8U0ScFxHnAf/IGL+/ImI68E3gU5m5vbEvax/EHPLE4V9vRUT0RETP1q1b9+VUSRPcaL8S/6FeiIhvAmTmw5l5eWbOb2pk0hCuueaaAfUvfvGLFUWidhcR8yPixMz8M+D/AW8pjx8CN4zh/CnUkrFbMvNbpbmvfimyPNdH3jYBRzWcPre0DZCZN2Tmosxc1N3dvZ9/maSJaLSELBrKr29mINJY1EfHhqtLDa4BtgNk5rcy88LMvJDakj3XjHRiRARwE/BYZjZm/WuAZaW8DLijof3ccrflYuCFhkubkjSq0dYhy2HKktTuZmfmQ4MbM/OhMi9sJCcCHwYeioj1pe0y4Crg1ohYDjxF7a5NqF0CPR3oBV4GPnLA0Us6qIyWkB0XEdupjZRNK2VKPTPzsKZGJ0n7b+YIfdNGOjEzf8DAKwSNThni+ATOH3tokjTQaHdZTs7MwzJzRmZ2lXK9bjKmluvq6hqxLjXoiYiPDW6MiI8CD1QQjyQNy/+bqaMce+yxbNiwYU/9LW95S4XRqM19Crg9Ij7EKwnYIuAQ4AOVRSVJQzAhU0dpTMYAHnzwwYoiUbvLzD7gHRFxMvB7pfkfM3NthWFJ0pBMyCRNaJm5DlhXdRySNJIxr1YtSZKk5mhaQhYRR0XEuoh4NCIeiYgLSvusiLg3In5Rng8v7RERX4qI3ojYEBFvbVZs6lyD96/84z/+44oikSRp/DRzhGwXcFFmHgssBs6PiGOBS4D7MnMBcF+pA5wGLCiPFcB1TYxNHeriiy8eUL/ooosqikSSpPHTtIQsMzdn5oOl/CLwGLXNdpcCq8phq4AzSnkp8LWs+REws75FidSoPkrm6JgkaaJoyaT+sir28cD91FbPrm8p8gwwu5TnAE83nLaxtA3YfiQiVlAbQePoo49uWsxqXxdffPFeI2XSwai/v5++vj4AZs+ezaRJTguWOlXT/+uNiOnUNuj9VGZub+wrq1vv05ZMbs4rSTV9fX2ct/Iezlt5z57ETFJnauoIWURMoZaM3ZKZ3yrNfRFxZGZuLpckt5T2TcBRDafPLW2SpGFMPWxW1SFIGgfNvMsygJuAxzLziw1da4BlpbwMuKOh/dxyt+Vi4IWGS5uSJEkTVjNHyE4EPgw8FBHrS9tlwFXArRGxHHgKOKv03Q2cDvQCLwMfaWJskiRJbaNpCVlm/gCIYbpPGeL4BM5vVjySJEntyltyJEmSKmZCJkmSVDETMkkaQkR8NSK2RMTDDW2fiYhNEbG+PE5v6Lu0bP3284j4o2qiltSpTMjUcdauXctJJ53EunXrqg5FE9vNwKlDtF+dmQvL426Asi3c2cDvlnNWRsTklkUqqeOZkKnjXHnllQBcccUVFUeiiSwzvw9sG+PhS4HVmbkzM39J7W7xE5oWnKQJx4RMHWXt2rXs2rULgF27djlKpip8IiI2lEuah5e24bZ+k6QxMSFTR6mPjtU5SqYWuw54A7CQ2j67f70vJ0fEiojoiYierVu3NiM+SR3KhEwdpT46NlxdaqbM7MvM3ZnZD3yFVy5LjmnrN/filTQcEzJ1lK6urhHrUjOV/XfrPgDU78BcA5wdEYdGxDHAAuDHrY5PUucyIVNHueyyywbUL7/88ooi0UQXEX8H/BB4Y0RsLNu9/WVEPBQRG4CTgf8OkJmPALcCjwLfAc7PzN0VhS6pAzm8oI7yk5/8ZED9wQcf5OSTT64oGk1kmXnOEM03jXD8FYCTGiXtF0fI1FG+/e1vD6jfeeedFUUiSdL4MSGTJEmqmAmZJElSxZxDJkkTSH9/P319fQDMnj2bSZP83S11Av9LVUeZPn36iHXpYNfX18d5K+/hvJX37EnMJLU/EzJ1lI997GMD6h//+McrikSqTpZRsL6+Psi9+6ceNouph81qfWCS9psJmTrKddddN6C+cuXKiiKRqrPzpee5cHUPn7r5e/z2t7+tOhxJ48A5ZOooO3bsGFD/9a9/XVEkUrWmzpjF7ilTqg5D0jhxhEySJKliJmSSJEkVMyFTR3nHO94xoP6ud72rokgkSRo/JmTqKFdeeeWA+uc+97mKIpEkafyYkKmjrF27dkB93bp1FUUiSdL4MSFTRxk8QnbFFVdUFIkkSePHhEwdZdeuXSPWJUnqRCZkkiRJFTMhk6QhRMRXI2JLRDzc0DYrIu6NiF+U58NLe0TElyKiNyI2RMRbq4tcUicyIZOkod0MnDqo7RLgvsxcANxX6gCnAQvKYwVwHZK0D5qWkPnrUlIny8zvA9sGNS8FVpXyKuCMhvavZc2PgJkRcWRrIpU0ETRzhOxm/HUpaWKZnZmbS/kZYHYpzwGebjhuY2mTpDFpWkLmr0s1w7Rp00asS62SmQnkvpwTESsioicierZu3dqkyCR1olbPITvgX5d+oR3c/uIv/mJA/fOf/3xFkegg1Vf/sViet5T2TcBRDcfNLW0DZOYNmbkoMxd1d3c3PVhJnaOySf378+uynOcX2kFs+/btI9alJlsDLCvlZcAdDe3nlvmwi4EXGn58StKoWp2QHdCvS2nwCJl7WapZIuLvgB8Cb4yIjRGxHLgKeHdE/AL4j6UOcDfwBNALfAX4kwpCltTBulr8fvVfl1ex96/LT0TEauBt+OtSw6gNrA5fl8ZLZp4zTNcpQxybwPnNjUjSRNa0hKz8ujwJeG1EbAQ+TS0Ru7X80nwKOKscfjdwOrVfly8DH2lWXJIkSe2maQmZvy4lSZLGxpX6JUmSKmZCJkmSVDETMkmSpIqZkEmSJFXMhEySJKliJmSSJEkVMyGTJEmqWKtX6ldFvvzlL9Pb21t1GE1xwQUXVB3CAZk/fz6f/OQnqw5DklQhR8gkSZIq5gjZQWKijMD09vby0Y9+dE/9xhtvZP78+RVGJEnSgXOETB2lMfnq6uoyGZMkTQgmZOo4CxYsYNKkSVx//fVVhyJJ0rgwIVPHedWrXsWb3/xmR8ckSROGCZkkSVLFTMgkSZIq5l2WkrSPIuJJ4EVgN7ArMxdFxCzgG8A84EngrMx8rhXxZH8/fX19APT397fiLSWNM0fIJGn/nJyZCzNzUalfAtyXmQuA+0q9JXa+9DwXru7hvJX3sHXr1la9raRxZEImSeNjKbCqlFcBZ7TyzafOmMXUw2a18i0ljSMTMknadwncExEPRMSK0jY7MzeX8jPA7MEnRcSKiOiJiJ5mj2TVL2Nu3rzZy5hSB3AOmSTtu3dm5qaI+B3g3oh4vLEzMzMicvBJmXkDcAPAokWL9uofT7XLmFuZMmUKN//JezjyyCOb+XaSDpAJ2Qgm8obcnaz+76TTNxWfaA6mTdIzc1N53hIRtwMnAH0RcWRmbo6II4EtLY+rv782h6ykelNnzGLKIVNaHYak/WBCNoLe3l7WP/wYu1/lvIx2Muk3tf/bPPBEX8WRqG7yy9uqDqFlIuLVwKTMfLGU3wN8DlgDLAOuKs93tDq2nS89z2W39NC94PhWv7WkA2RCNordr5rFr990etVhSG1t2uN3Vx1CK80Gbo8IqH2Hfj0zvxMRPwFujYjlwFPAWVUEd8irD6vibSUdIBMySdoHmfkEcNwQ7c8Cp7Q+IkkTgXdZSpIkVcyETJIkqWJeshzBpk2bmPzyCwfb/Bhpn01++Vk2bdpVdRiS1LFMyCTpINbfsA/m7NmzmTTJCydSFUzIRjBnzhye2dnlXZbSKKY9fjdz5uy1ML3ayHCJV19fH+etvAfABWSlCpmQjWLyy9u8ZNlmJu3YDkD/VG/vbxe1dchMyNrZSImXe2BK1WurhCwiTgWuBSYDN2bmVVXGM3/+/CrfXsPo7X0RgPmvNwFoH7P976UDmHhJ7attErKImAz8X+DdwEbgJxGxJjMfrSqmg2UbmE5T3zLp2muvrTgSaeLIMc4lq1/6dL6ZNL7aJiGjthdcb1l0kYhYDSwFKkvIJpKJtC/nRNvL8mDaA1L7p54E9fX17dmncryNdTPyvr4+zr5qNasvOdv5ZtI4aqeEbA7wdEN9I/C2wQdFxApgBcDRRx/dmsjUVqZNm1Z1CFJL1ed/7XzxeV7VfdQ+nds48kUCMfyxQ21GPvhmAIBDZxy+TzFIGl07JWRjkpk3ADcALFq0qEm/FSceR2Ckzra/87/qI1/9O37Fq7qP2ivhGk09Gczs5y/PrG1aPtbLm5LGrp0Ssk1A40+/uaVNknQAps6Yxe4p+5aIDTj/sFns2L6NC1f30L/jV/z2t7/hwtU9o17e1PBc/02DtdMn4CfAgog4JiIOAc4G1lQckySpmDpjFofOmLmnXB+16+/vZ/PmzWzevJn+/v4Dfp/6643Ha7Wr+sjjeSvveeWSsg5qbZOQZeYu4BPAPwGPAbdm5iPVRiVJE0v9cuOmTZvYtGnTXjcK1Pv3JSEa7+SifuPAUK813snfSJr9XlMPm+VSJNqjnS5Zkpl3A67CKklN0jinbNLUV++ZWza4v6tr8p45Y2O5s3OkxGJ/Ls8Nd+NAK3cWcBcDtVJbJWSSpOarzymbPHXGkHPLps6Yxe4dL+6ZMzbcnZ1jvYNzvBObVo4qjXeiKQ3HhEySxkm77TZyoEa7GWC0Ozgb10+bOmMWmXsvoTHWhGavtdhi6P6xvNb+GvweIyWaJmsTWzP+/ZqQSdI4aMfdRlphpKRt8PpptVG3VxafBYZNaAYnb4Nfa3Dy14rLi4PfA4YfQfNy58TWjH+/JmSSND6autvIju3b2Pni80z67W9r87+Gef7Nr7az48VtIx5zoM/DvcfuKVMGTMRvLO85fuqr9+obXO/r6+PFvqc5/yvP0tXVxbUfOXngP4sXt434XuN112JfXx87tm8bMd7R+oeLZ6TXVvtrxr+zyOzctVUjYivwVNVxqBKvBf6t6iBUiX+Xmd1VBzFYRJwJnJqZHy31DwNvy8xPNByzZ6cR4I3Az/fhLTrxM2/MrWHMrTEeMQ/7/dXRI2Tt+KWs1oiInsxcVHUc0r5o3GlkX3XiZ96YW8OYW6PZMTvLUJLGh7uNSNpvJmSSND7cbUTSfuvoS5Y6qO3XZR+pWTJzV0TUdxuZDHx1nHcb6cTPvDG3hjG3RlNj7uhJ/ZIkSROBlywlSZIqZkImSZJUMRMySWpjEXFqRPw8Inoj4pKq42kUEV+NiC0R8XBD26yIuDciflGeDy/tERFfKn/Hhoh4awXxHhUR6yLi0Yh4JCIu6ICYp0bEjyPiZyXmz5b2YyLi/hLbN8qNJETEoaXeW/rntTrmhtgnR8RPI+KuTog5Ip6MiIciYn1E9JS2ln02TMgkqU01bMd0GnAscE5EHFttVAPcDJw6qO0S4L7MXADcV+pQ+xsWlMcK4LoWxdhoF3BRZh4LLAbOL/882znmncCSzDwOWAicGhGLgS8AV2fmfOA5YHk5fjnwXGm/uhxXlQuAxxrqnRDzyZm5sGG9sZZ9NkzIJKl97dmOKTN/A9S3Y2oLmfl9YNug5qXAqlJeBZzR0P61rPkRMDMiWrrBY2ZuzswHS/lFasnCnDaPOTPzpVKdUh4JLAFuGybm+t9yG3BKRAzair35ImIu8J2DA3kAAAOsSURBVF7gxlIP2jzmYbTss2FCJkntaw7wdEN9Y2lrZ7Mzc3MpPwPMLuW2+lvKZbHjgftp85jLpb/1wBbgXuBfgeczc9cQce2JufS/ABzR2ogBuAb4c6C/1I+g/WNO4J6IeKBscwYt/Gy4DpkkqSkyMyOi7dZWiojpwDeBT2Xm9sbBmHaMOTN3AwsjYiZwO/CmikMaUUS8D9iSmQ9ExElVx7MP3pmZmyLid4B7I+Lxxs5mfzYcIZOk9tWJ2zH11S/dlOctpb0t/paImEItGbslM79Vmts65rrMfB5YB7yd2iWy+qBKY1x7Yi79rwGebXGoJwLvj4gnqV1mXwJcS3vHTGZuKs9bqCW+J9DCz4YJmSS1r07cjmkNsKyUlwF3NLSfW+5OWwy80HApqCXKvKSbgMcy84sNXe0cc3cZGSMipgHvpjb3bR1w5jAx1/+WM4G12eIV4DPz0sycm5nzqH1m12bmh2jjmCPi1RExo14G3gM8TAs/G67UL0ltLCJOpzYfp74d0xUVh7RHRPwdcBLwWqAP+DTwD8CtwNHAU8BZmbmtJEP/h9pdmS8DH8nMnhbH+07gn4GHeGVu02XU5pG1a8xvoTaZfDK1QZRbM/NzEfF6aqNPs4CfAv8lM3dGxFTgb6nNj9sGnJ2ZT7Qy5kblkuWfZub72jnmEtvtpdoFfD0zr4iII2jRZ8OETJIkqWJespQkSaqYCZkkSVLFTMgkSZIqZkImSZJUMRMySZKkipmQSZJ0gCJid0Ssb3jMK+2fiogdEfGahmNPiogXynGPR8RfNfSdFxFbB71WO20oryZx6yRJkg7crzNz4RDt51Bb4Pc/AX/T0P7PZW2uacBPI+L2zPyX0veNzPxEk+NVm3GETJKkJoiINwDTgf9BLTHbS2b+GlhP+28aryZzhEySpAM3LSLWl/IvM/MD1LYNWk1td4A3RsTszOxrPCkiDgcWAN9vaP7PZVeBureXxE0TmAmZJEkHbqhLlucAH8jM/oj4JvBBatvtAPxhRPyMWjJ2TWY+03CelywPQl6ylCRpnEXEm6klW/dGxJPURssaL1v+c2YeB/wusDwihpp/poOICZkkSePvHOAzmTmvPF4HvC4i/l3jQZn5S+Aq4OIqglT7MCGTJGn8nQ3cPqjt9tI+2PXAu+pLZVCbQ9a47MU7mhem2kVkZtUxSJIkHdQcIZMkSaqYCZkkSVLFTMgkSZIqZkImSZJUMRMySZKkipmQSZIkVcyETJIkqWL/HzbMfCQqq7NxAAAAAElFTkSuQmCC\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["def high_correlated_cols(dataframe, corr_th=0.90, plot=False):\n","    corr = dataframe.corr()\n","    cor_matrix = corr.abs()\n","    upper_triangle_matrix = cor_matrix.where(np.triu(np.ones(cor_matrix.shape), k=1).astype(np.bool_))\n","    drop_list = [col for col in upper_triangle_matrix.columns if any(upper_triangle_matrix[col] > corr_th)]\n","\n","    if plot:\n","        plt.figure(figsize=(12, 8))\n","        sns.heatmap(corr, cmap='RdBu', annot=True, annot_kws={'fontsize': 10})\n","        plt.show(block=True)\n","\n","    return drop_list\n","\n","high_correlated_cols(train_test, plot=True)  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":504},"id":"HgQTXKOnyLl5","executionInfo":{"status":"ok","timestamp":1669916607043,"user_tz":-60,"elapsed":2343,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"0da61080-03e2-4e4f-b7f4-a640b275e11c"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{},"execution_count":68}]},{"cell_type":"markdown","source":["## Feature engineering"],"metadata":{"id":"meGi5T2AYMq-"}},{"cell_type":"code","source":["df_train_test = train_test.copy()"],"metadata":{"id":"uZK9YtPr9aaf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train_test['new_cabin_bool'] = df_train_test['Cabin'].notnull().astype('int')\n","# Cabin Bool\n","\n","df_train_test['new_title'] = df_train_test['Name'].str.extract(' ([A-Za-z]+)\\.', expand=False)\n","# Name title\n","\n","\n","df_train_test['new_family_size'] = df_train_test['SibSp'] + df_train_test['Parch'] + 1\n","# Family size\n","\n","df_train_test['new_age_pclass'] = df_train_test['Age'] * df_train_test['Pclass']\n","# Age Pclass\n","\n","df_train_test.loc[((df_train_test['SibSp'] + df_train_test['Parch']) > 0), 'new_is_alone'] = 'No'\n","df_train_test.loc[((df_train_test['SibSp'] + df_train_test['Parch']) == 0), 'new_is_alone'] = 'Yes'\n","# Is alone?\n","\n","\n","df_train_test.loc[(df_train_test['Age'] < 18), 'new_age_cat'] = 'young'\n","df_train_test.loc[(df_train_test['Age'] >= 18) & (df_train_test['Age'] < 56), 'new_age_cat'] = 'mature'\n","df_train_test.loc[(df_train_test['Age'] >= 56), 'new_age_cat'] = 'senior'\n","# Age level\n","\n","df_train_test.loc[(df_train_test['Sex'] == 'male') & (df_train_test['Age'] <= 21), 'new_sex_cat'] = 'youngmale'\n","df_train_test.loc[(df_train_test['Sex'] == 'male') & ((df_train_test['Age'] > 21) & (df_train_test['Age'] <= 50)), 'new_sex_cat'] = 'maturemale'\n","df_train_test.loc[(df_train_test['Sex'] == 'male') & (df_train_test['Age'] > 50), 'new_sex_cat'] = 'seniormale'                                       \n","df_train_test.loc[(df_train_test['Sex'] == 'female') & (df_train_test['Age'] <= 21), 'new_sex_cat'] = 'youngfemale'\n","df_train_test.loc[(df_train_test['Sex'] == 'female') & ((df_train_test['Age'] > 21) & (df_train_test['Age'] <= 50)), 'new_sex_cat'] = 'maturefemale'\n","df_train_test.loc[(df_train_test['Sex'] == 'female') & (df_train_test['Age'] > 50), 'new_sex_cat'] = 'seniorfemale'\n","# Sex-Age\n","\n","\n","\n","df_train_test.drop(['Cabin', 'Name', 'Ticket'], axis=1, inplace=True)\n","# Delete the variables 'Cabin', 'Name', and 'Ticket'\n"],"metadata":{"id":"Gwy7HsHb-Lan"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"jnLxVVugH5YW","executionInfo":{"status":"ok","timestamp":1669922270581,"user_tz":-60,"elapsed":743,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"b48b847c-4429-40db-b440-b43e7120b47f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      PassengerId  Pclass     Sex   Age  SibSp  Parch      Fare Embarked  \\\n","0               1       3    male  22.0      1      0    7.2500        S   \n","1               2       1  female  38.0      1      0   71.2833        C   \n","2               3       3  female  26.0      0      0    7.9250        S   \n","3               4       1  female  35.0      1      0   53.1000        S   \n","4               5       3    male  35.0      0      0    8.0500        S   \n","...           ...     ...     ...   ...    ...    ...       ...      ...   \n","1304         1305       3    male   NaN      0      0    8.0500        S   \n","1305         1306       1  female  39.0      0      0  108.9000        C   \n","1306         1307       3    male  38.5      0      0    7.2500        S   \n","1307         1308       3    male   NaN      0      0    8.0500        S   \n","1308         1309       3    male   NaN      1      1   22.3583        C   \n","\n","      new_cabin_bool new_title  new_family_size  new_age_pclass new_is_alone  \\\n","0                  0        Mr                2            66.0           No   \n","1                  1       Mrs                2            38.0           No   \n","2                  0      Miss                1            78.0          Yes   \n","3                  1       Mrs                2            35.0           No   \n","4                  0        Mr                1           105.0          Yes   \n","...              ...       ...              ...             ...          ...   \n","1304               0        Mr                1             NaN          Yes   \n","1305               1      Dona                1            39.0          Yes   \n","1306               0        Mr                1           115.5          Yes   \n","1307               0        Mr                1             NaN          Yes   \n","1308               0    Master                3             NaN           No   \n","\n","     new_age_cat   new_sex_cat  \n","0         mature    maturemale  \n","1         mature  maturefemale  \n","2         mature  maturefemale  \n","3         mature  maturefemale  \n","4         mature    maturemale  \n","...          ...           ...  \n","1304         NaN           NaN  \n","1305      mature  maturefemale  \n","1306      mature    maturemale  \n","1307         NaN           NaN  \n","1308         NaN           NaN  \n","\n","[1309 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-125dfdd7-966e-44d9-9329-36ce6eb12d9c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>new_cabin_bool</th>\n","      <th>new_title</th>\n","      <th>new_family_size</th>\n","      <th>new_age_pclass</th>\n","      <th>new_is_alone</th>\n","      <th>new_age_cat</th>\n","      <th>new_sex_cat</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>0</td>\n","      <td>Mr</td>\n","      <td>2</td>\n","      <td>66.0</td>\n","      <td>No</td>\n","      <td>mature</td>\n","      <td>maturemale</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>1</td>\n","      <td>Mrs</td>\n","      <td>2</td>\n","      <td>38.0</td>\n","      <td>No</td>\n","      <td>mature</td>\n","      <td>maturefemale</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>0</td>\n","      <td>Miss</td>\n","      <td>1</td>\n","      <td>78.0</td>\n","      <td>Yes</td>\n","      <td>mature</td>\n","      <td>maturefemale</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>1</td>\n","      <td>Mrs</td>\n","      <td>2</td>\n","      <td>35.0</td>\n","      <td>No</td>\n","      <td>mature</td>\n","      <td>maturefemale</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>0</td>\n","      <td>Mr</td>\n","      <td>1</td>\n","      <td>105.0</td>\n","      <td>Yes</td>\n","      <td>mature</td>\n","      <td>maturemale</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1304</th>\n","      <td>1305</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>0</td>\n","      <td>Mr</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>Yes</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1305</th>\n","      <td>1306</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>39.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>108.9000</td>\n","      <td>C</td>\n","      <td>1</td>\n","      <td>Dona</td>\n","      <td>1</td>\n","      <td>39.0</td>\n","      <td>Yes</td>\n","      <td>mature</td>\n","      <td>maturefemale</td>\n","    </tr>\n","    <tr>\n","      <th>1306</th>\n","      <td>1307</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>38.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>0</td>\n","      <td>Mr</td>\n","      <td>1</td>\n","      <td>115.5</td>\n","      <td>Yes</td>\n","      <td>mature</td>\n","      <td>maturemale</td>\n","    </tr>\n","    <tr>\n","      <th>1307</th>\n","      <td>1308</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>0</td>\n","      <td>Mr</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>Yes</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1308</th>\n","      <td>1309</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>22.3583</td>\n","      <td>C</td>\n","      <td>0</td>\n","      <td>Master</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>No</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1309 rows × 15 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-125dfdd7-966e-44d9-9329-36ce6eb12d9c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-125dfdd7-966e-44d9-9329-36ce6eb12d9c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-125dfdd7-966e-44d9-9329-36ce6eb12d9c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["df_train_test2 = df_train_test.copy()"],"metadata":{"id":"8o1VqmvKIFnr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train_test2['Age'] = df_train_test2['Age'].fillna(df_train_test2.groupby(['Sex', 'Pclass'])['Age'].transform('median')) "],"metadata":{"id":"72GehD-oIPf6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train_test2['new_age_pclass'] = df_train_test2['Age'] * df_train_test2['Pclass']\n","# Age Pclass\n","\n","df_train_test2.loc[(df_train_test2['Age'] < 18), 'new_age_cat'] = 'young'\n","df_train_test2.loc[(df_train_test2['Age'] >= 18) & (df_train_test2['Age'] < 56), 'new_age_cat'] = 'mature'\n","df_train_test2.loc[(df_train_test2['Age'] >= 56), 'new_age_cat'] = 'senior'\n","# Age level\n","\n","\n","df_train_test2.loc[(df_train_test2['Sex'] == 'male') & (df_train_test2['Age'] <= 21), 'new_sex_cat'] = 'youngmale'\n","df_train_test2.loc[(df_train_test2['Sex'] == 'male') & ((df_train_test2['Age'] > 21) & (df_train_test2['Age'] <= 50)), 'new_sex_cat'] = 'maturemale'\n","df_train_test2.loc[(df_train_test2['Sex'] == 'male') & (df_train_test2['Age'] > 50), 'new_sex_cat'] = 'seniormale'                                       \n","df_train_test2.loc[(df_train_test2['Sex'] == 'female') & (df_train_test2['Age'] <= 21), 'new_sex_cat'] = 'youngfemale'\n","df_train_test2.loc[(df_train_test2['Sex'] == 'female') & ((df_train_test2['Age'] > 21) & (df_train_test2['Age'] <= 50)), 'new_sex_cat'] = 'maturefemale'\n","df_train_test2.loc[(df_train_test2['Sex'] == 'female') & (df_train_test2['Age'] > 50), 'new_sex_cat'] = 'seniorfemale'\n","# Sex-Age\n"],"metadata":{"id":"XkAkVCH4JVOW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train_test2.isnull().sum()"],"metadata":{"id":"SooQQSbAYLgk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669924680598,"user_tz":-60,"elapsed":785,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"e2bcd7d4-cd20-460b-ac0a-a621e0859da6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId        0\n","Pclass             0\n","Sex                0\n","Age                0\n","SibSp              0\n","Parch              0\n","Fare               1\n","Embarked           2\n","new_cabin_bool     0\n","new_title          0\n","new_family_size    0\n","new_age_pclass     0\n","new_is_alone       0\n","new_age_cat        0\n","new_sex_cat        0\n","dtype: int64"]},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["df_train_test2 = df_train_test2.apply(lambda x: x.fillna(x.mode()[0]) if (x.dtype == 'O' and len(x.unique()) <= 10) else x, axis=0)\n","df_train_test2.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XMhGU84QSHiC","executionInfo":{"status":"ok","timestamp":1669925010241,"user_tz":-60,"elapsed":776,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"8e1a60a2-b0fa-4d80-aa61-6767097d19de"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId        0\n","Pclass             0\n","Sex                0\n","Age                0\n","SibSp              0\n","Parch              0\n","Fare               1\n","Embarked           0\n","new_cabin_bool     0\n","new_title          0\n","new_family_size    0\n","new_age_pclass     0\n","new_is_alone       0\n","new_age_cat        0\n","new_sex_cat        0\n","dtype: int64"]},"metadata":{},"execution_count":93}]},{"cell_type":"code","source":["df_train_test2 = df_train_test2.apply(lambda x: x.fillna(x.mean()) if (x.dtype != 'O') else x, axis=0)\n"],"metadata":{"id":"Fa4dDKBzabnL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train_test2.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MDxSpIhOk7hS","executionInfo":{"status":"ok","timestamp":1669925368287,"user_tz":-60,"elapsed":1505,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"a87332fb-653c-4af4-b5a5-513581a3c1f1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId        0\n","Pclass             0\n","Sex                0\n","Age                0\n","SibSp              0\n","Parch              0\n","Fare               0\n","Embarked           0\n","new_cabin_bool     0\n","new_title          0\n","new_family_size    0\n","new_age_pclass     0\n","new_is_alone       0\n","new_age_cat        0\n","new_sex_cat        0\n","dtype: int64"]},"metadata":{},"execution_count":95}]},{"cell_type":"markdown","source":["## Encoding"],"metadata":{"id":"8ssDun4lT7UJ"}},{"cell_type":"code","source":["def label_encoder(df, binary_col):\n","\n","  label_encoder = LabelEncoder()\n","  df[binary_col] = label_encoder.fit_transform(df[binary_col])\n","\n","  return df\n","\n","binary_cols = [col for col in df_train_test2.columns if df_train_test2[col].nunique() == 2 and df_train_test2[col].dtypes not in ('int', 'float')]\n","\n","for col in binary_cols:\n","    label_encoder(df_train_test2, col)\n","  "],"metadata":{"id":"D5kPAlT2T-kN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train_test2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"FLnR9lDQgJDs","executionInfo":{"status":"ok","timestamp":1669926617003,"user_tz":-60,"elapsed":631,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"330abab9-c8f6-4f8c-9d53-03a6dd63aa10"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      PassengerId  Pclass  Sex   Age  SibSp  Parch      Fare Embarked  \\\n","0               1       3    1  22.0      1      0    7.2500        S   \n","1               2       1    0  38.0      1      0   71.2833        C   \n","2               3       3    0  26.0      0      0    7.9250        S   \n","3               4       1    0  35.0      1      0   53.1000        S   \n","4               5       3    1  35.0      0      0    8.0500        S   \n","...           ...     ...  ...   ...    ...    ...       ...      ...   \n","1304         1305       3    1  25.0      0      0    8.0500        S   \n","1305         1306       1    0  39.0      0      0  108.9000        C   \n","1306         1307       3    1  38.5      0      0    7.2500        S   \n","1307         1308       3    1  25.0      0      0    8.0500        S   \n","1308         1309       3    1  25.0      1      1   22.3583        C   \n","\n","      new_cabin_bool new_title  new_family_size  new_age_pclass  new_is_alone  \\\n","0                  0        Mr                2            66.0             0   \n","1                  1       Mrs                2            38.0             0   \n","2                  0      Miss                1            78.0             1   \n","3                  1       Mrs                2            35.0             0   \n","4                  0        Mr                1           105.0             1   \n","...              ...       ...              ...             ...           ...   \n","1304               0        Mr                1            75.0             1   \n","1305               1      Dona                1            39.0             1   \n","1306               0        Mr                1           115.5             1   \n","1307               0        Mr                1            75.0             1   \n","1308               0    Master                3            75.0             0   \n","\n","     new_age_cat   new_sex_cat  \n","0         mature    maturemale  \n","1         mature  maturefemale  \n","2         mature  maturefemale  \n","3         mature  maturefemale  \n","4         mature    maturemale  \n","...          ...           ...  \n","1304      mature    maturemale  \n","1305      mature  maturefemale  \n","1306      mature    maturemale  \n","1307      mature    maturemale  \n","1308      mature    maturemale  \n","\n","[1309 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-a0b40139-1263-410a-8428-cbbf244c82e1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>new_cabin_bool</th>\n","      <th>new_title</th>\n","      <th>new_family_size</th>\n","      <th>new_age_pclass</th>\n","      <th>new_is_alone</th>\n","      <th>new_age_cat</th>\n","      <th>new_sex_cat</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>0</td>\n","      <td>Mr</td>\n","      <td>2</td>\n","      <td>66.0</td>\n","      <td>0</td>\n","      <td>mature</td>\n","      <td>maturemale</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>1</td>\n","      <td>Mrs</td>\n","      <td>2</td>\n","      <td>38.0</td>\n","      <td>0</td>\n","      <td>mature</td>\n","      <td>maturefemale</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>0</td>\n","      <td>Miss</td>\n","      <td>1</td>\n","      <td>78.0</td>\n","      <td>1</td>\n","      <td>mature</td>\n","      <td>maturefemale</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>1</td>\n","      <td>Mrs</td>\n","      <td>2</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>mature</td>\n","      <td>maturefemale</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>0</td>\n","      <td>Mr</td>\n","      <td>1</td>\n","      <td>105.0</td>\n","      <td>1</td>\n","      <td>mature</td>\n","      <td>maturemale</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1304</th>\n","      <td>1305</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>0</td>\n","      <td>Mr</td>\n","      <td>1</td>\n","      <td>75.0</td>\n","      <td>1</td>\n","      <td>mature</td>\n","      <td>maturemale</td>\n","    </tr>\n","    <tr>\n","      <th>1305</th>\n","      <td>1306</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>39.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>108.9000</td>\n","      <td>C</td>\n","      <td>1</td>\n","      <td>Dona</td>\n","      <td>1</td>\n","      <td>39.0</td>\n","      <td>1</td>\n","      <td>mature</td>\n","      <td>maturefemale</td>\n","    </tr>\n","    <tr>\n","      <th>1306</th>\n","      <td>1307</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>38.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>0</td>\n","      <td>Mr</td>\n","      <td>1</td>\n","      <td>115.5</td>\n","      <td>1</td>\n","      <td>mature</td>\n","      <td>maturemale</td>\n","    </tr>\n","    <tr>\n","      <th>1307</th>\n","      <td>1308</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>0</td>\n","      <td>Mr</td>\n","      <td>1</td>\n","      <td>75.0</td>\n","      <td>1</td>\n","      <td>mature</td>\n","      <td>maturemale</td>\n","    </tr>\n","    <tr>\n","      <th>1308</th>\n","      <td>1309</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>22.3583</td>\n","      <td>C</td>\n","      <td>0</td>\n","      <td>Master</td>\n","      <td>3</td>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>mature</td>\n","      <td>maturemale</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1309 rows × 15 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0b40139-1263-410a-8428-cbbf244c82e1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a0b40139-1263-410a-8428-cbbf244c82e1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a0b40139-1263-410a-8428-cbbf244c82e1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["# OneHot Encoding\n","def one_hot_encoder(dataframe, categorical_cols, drop_first=True):\n","    dataframe = pd.get_dummies(dataframe, columns = categorical_cols, drop_first=drop_first)\n","    return dataframe\n","\n","ohe_cols = [col for col in df_train_test2.columns if 20 >= df_train_test2[col].nunique() > 2]\n","df_train_test2 = one_hot_encoder(df_train_test2, ohe_cols)\n","df_train_test2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"GSeRO1IvYxhX","executionInfo":{"status":"ok","timestamp":1669926992703,"user_tz":-60,"elapsed":793,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"7db8d4f2-95c8-4498-9d33-69d1d173f055"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      PassengerId  Sex   Age      Fare  new_cabin_bool  new_age_pclass  \\\n","0               1    1  22.0    7.2500               0            66.0   \n","1               2    0  38.0   71.2833               1            38.0   \n","2               3    0  26.0    7.9250               0            78.0   \n","3               4    0  35.0   53.1000               1            35.0   \n","4               5    1  35.0    8.0500               0           105.0   \n","...           ...  ...   ...       ...             ...             ...   \n","1304         1305    1  25.0    8.0500               0            75.0   \n","1305         1306    0  39.0  108.9000               1            39.0   \n","1306         1307    1  38.5    7.2500               0           115.5   \n","1307         1308    1  25.0    8.0500               0            75.0   \n","1308         1309    1  25.0   22.3583               0            75.0   \n","\n","      new_is_alone  Pclass_2  Pclass_3  SibSp_1  ...  new_family_size_7  \\\n","0                0         0         1        1  ...                  0   \n","1                0         0         0        1  ...                  0   \n","2                1         0         1        0  ...                  0   \n","3                0         0         0        1  ...                  0   \n","4                1         0         1        0  ...                  0   \n","...            ...       ...       ...      ...  ...                ...   \n","1304             1         0         1        0  ...                  0   \n","1305             1         0         0        0  ...                  0   \n","1306             1         0         1        0  ...                  0   \n","1307             1         0         1        0  ...                  0   \n","1308             0         0         1        1  ...                  0   \n","\n","      new_family_size_8  new_family_size_11  new_age_cat_senior  \\\n","0                     0                   0                   0   \n","1                     0                   0                   0   \n","2                     0                   0                   0   \n","3                     0                   0                   0   \n","4                     0                   0                   0   \n","...                 ...                 ...                 ...   \n","1304                  0                   0                   0   \n","1305                  0                   0                   0   \n","1306                  0                   0                   0   \n","1307                  0                   0                   0   \n","1308                  0                   0                   0   \n","\n","      new_age_cat_young  new_sex_cat_maturemale  new_sex_cat_seniorfemale  \\\n","0                     0                       1                         0   \n","1                     0                       0                         0   \n","2                     0                       0                         0   \n","3                     0                       0                         0   \n","4                     0                       1                         0   \n","...                 ...                     ...                       ...   \n","1304                  0                       1                         0   \n","1305                  0                       0                         0   \n","1306                  0                       1                         0   \n","1307                  0                       1                         0   \n","1308                  0                       1                         0   \n","\n","      new_sex_cat_seniormale  new_sex_cat_youngfemale  new_sex_cat_youngmale  \n","0                          0                        0                      0  \n","1                          0                        0                      0  \n","2                          0                        0                      0  \n","3                          0                        0                      0  \n","4                          0                        0                      0  \n","...                      ...                      ...                    ...  \n","1304                       0                        0                      0  \n","1305                       0                        0                      0  \n","1306                       0                        0                      0  \n","1307                       0                        0                      0  \n","1308                       0                        0                      0  \n","\n","[1309 rows x 56 columns]"],"text/html":["\n","  <div id=\"df-a356af5d-e183-4bcd-93ad-27b9798ce0bd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>new_cabin_bool</th>\n","      <th>new_age_pclass</th>\n","      <th>new_is_alone</th>\n","      <th>Pclass_2</th>\n","      <th>Pclass_3</th>\n","      <th>SibSp_1</th>\n","      <th>...</th>\n","      <th>new_family_size_7</th>\n","      <th>new_family_size_8</th>\n","      <th>new_family_size_11</th>\n","      <th>new_age_cat_senior</th>\n","      <th>new_age_cat_young</th>\n","      <th>new_sex_cat_maturemale</th>\n","      <th>new_sex_cat_seniorfemale</th>\n","      <th>new_sex_cat_seniormale</th>\n","      <th>new_sex_cat_youngfemale</th>\n","      <th>new_sex_cat_youngmale</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>7.2500</td>\n","      <td>0</td>\n","      <td>66.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>38.0</td>\n","      <td>71.2833</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>26.0</td>\n","      <td>7.9250</td>\n","      <td>0</td>\n","      <td>78.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>53.1000</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","      <td>105.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1304</th>\n","      <td>1305</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","      <td>75.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1305</th>\n","      <td>1306</td>\n","      <td>0</td>\n","      <td>39.0</td>\n","      <td>108.9000</td>\n","      <td>1</td>\n","      <td>39.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1306</th>\n","      <td>1307</td>\n","      <td>1</td>\n","      <td>38.5</td>\n","      <td>7.2500</td>\n","      <td>0</td>\n","      <td>115.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1307</th>\n","      <td>1308</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","      <td>75.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1308</th>\n","      <td>1309</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>22.3583</td>\n","      <td>0</td>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1309 rows × 56 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a356af5d-e183-4bcd-93ad-27b9798ce0bd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a356af5d-e183-4bcd-93ad-27b9798ce0bd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a356af5d-e183-4bcd-93ad-27b9798ce0bd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":100}]},{"cell_type":"code","source":["df_train = df_train_test2.iloc[:891, :]\n","df_train = pd.concat([df_train, survived], axis=1)\n","df_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"fBQ-nqlAaD3j","executionInfo":{"status":"ok","timestamp":1669927166111,"user_tz":-60,"elapsed":907,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"230c03b1-e45b-4c04-8749-c69478ed6610"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId  Sex   Age     Fare  new_cabin_bool  new_age_pclass  \\\n","0              1    1  22.0   7.2500               0            66.0   \n","1              2    0  38.0  71.2833               1            38.0   \n","2              3    0  26.0   7.9250               0            78.0   \n","3              4    0  35.0  53.1000               1            35.0   \n","4              5    1  35.0   8.0500               0           105.0   \n","..           ...  ...   ...      ...             ...             ...   \n","886          887    1  27.0  13.0000               0            54.0   \n","887          888    0  19.0  30.0000               1            19.0   \n","888          889    0  22.0  23.4500               0            66.0   \n","889          890    1  26.0  30.0000               1            26.0   \n","890          891    1  32.0   7.7500               0            96.0   \n","\n","     new_is_alone  Pclass_2  Pclass_3  SibSp_1  ...  new_family_size_8  \\\n","0               0         0         1        1  ...                  0   \n","1               0         0         0        1  ...                  0   \n","2               1         0         1        0  ...                  0   \n","3               0         0         0        1  ...                  0   \n","4               1         0         1        0  ...                  0   \n","..            ...       ...       ...      ...  ...                ...   \n","886             1         1         0        0  ...                  0   \n","887             1         0         0        0  ...                  0   \n","888             0         0         1        1  ...                  0   \n","889             1         0         0        0  ...                  0   \n","890             1         0         1        0  ...                  0   \n","\n","     new_family_size_11  new_age_cat_senior  new_age_cat_young  \\\n","0                     0                   0                  0   \n","1                     0                   0                  0   \n","2                     0                   0                  0   \n","3                     0                   0                  0   \n","4                     0                   0                  0   \n","..                  ...                 ...                ...   \n","886                   0                   0                  0   \n","887                   0                   0                  0   \n","888                   0                   0                  0   \n","889                   0                   0                  0   \n","890                   0                   0                  0   \n","\n","     new_sex_cat_maturemale  new_sex_cat_seniorfemale  new_sex_cat_seniormale  \\\n","0                         1                         0                       0   \n","1                         0                         0                       0   \n","2                         0                         0                       0   \n","3                         0                         0                       0   \n","4                         1                         0                       0   \n","..                      ...                       ...                     ...   \n","886                       1                         0                       0   \n","887                       0                         0                       0   \n","888                       0                         0                       0   \n","889                       1                         0                       0   \n","890                       1                         0                       0   \n","\n","     new_sex_cat_youngfemale  new_sex_cat_youngmale  Survived  \n","0                          0                      0         0  \n","1                          0                      0         1  \n","2                          0                      0         1  \n","3                          0                      0         1  \n","4                          0                      0         0  \n","..                       ...                    ...       ...  \n","886                        0                      0         0  \n","887                        1                      0         1  \n","888                        0                      0         0  \n","889                        0                      0         1  \n","890                        0                      0         0  \n","\n","[891 rows x 57 columns]"],"text/html":["\n","  <div id=\"df-74db435b-d68b-4e96-97ae-692eaed258ea\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>new_cabin_bool</th>\n","      <th>new_age_pclass</th>\n","      <th>new_is_alone</th>\n","      <th>Pclass_2</th>\n","      <th>Pclass_3</th>\n","      <th>SibSp_1</th>\n","      <th>...</th>\n","      <th>new_family_size_8</th>\n","      <th>new_family_size_11</th>\n","      <th>new_age_cat_senior</th>\n","      <th>new_age_cat_young</th>\n","      <th>new_sex_cat_maturemale</th>\n","      <th>new_sex_cat_seniorfemale</th>\n","      <th>new_sex_cat_seniormale</th>\n","      <th>new_sex_cat_youngfemale</th>\n","      <th>new_sex_cat_youngmale</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>7.2500</td>\n","      <td>0</td>\n","      <td>66.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>38.0</td>\n","      <td>71.2833</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>26.0</td>\n","      <td>7.9250</td>\n","      <td>0</td>\n","      <td>78.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>53.1000</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","      <td>105.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>886</th>\n","      <td>887</td>\n","      <td>1</td>\n","      <td>27.0</td>\n","      <td>13.0000</td>\n","      <td>0</td>\n","      <td>54.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>888</td>\n","      <td>0</td>\n","      <td>19.0</td>\n","      <td>30.0000</td>\n","      <td>1</td>\n","      <td>19.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>889</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>23.4500</td>\n","      <td>0</td>\n","      <td>66.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>890</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>30.0000</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>891</td>\n","      <td>1</td>\n","      <td>32.0</td>\n","      <td>7.7500</td>\n","      <td>0</td>\n","      <td>96.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>891 rows × 57 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-74db435b-d68b-4e96-97ae-692eaed258ea')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-74db435b-d68b-4e96-97ae-692eaed258ea button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-74db435b-d68b-4e96-97ae-692eaed258ea');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":102}]},{"cell_type":"code","source":["df_test = df_train_test2.iloc[891:, :]\n","df_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"LCQY93Nwan8j","executionInfo":{"status":"ok","timestamp":1669927244115,"user_tz":-60,"elapsed":796,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"039fe221-1819-417c-c3cb-c67c9da27b9b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      PassengerId  Sex   Age      Fare  new_cabin_bool  new_age_pclass  \\\n","891           892    1  34.5    7.8292               0           103.5   \n","892           893    0  47.0    7.0000               0           141.0   \n","893           894    1  62.0    9.6875               0           124.0   \n","894           895    1  27.0    8.6625               0            81.0   \n","895           896    0  22.0   12.2875               0            66.0   \n","...           ...  ...   ...       ...             ...             ...   \n","1304         1305    1  25.0    8.0500               0            75.0   \n","1305         1306    0  39.0  108.9000               1            39.0   \n","1306         1307    1  38.5    7.2500               0           115.5   \n","1307         1308    1  25.0    8.0500               0            75.0   \n","1308         1309    1  25.0   22.3583               0            75.0   \n","\n","      new_is_alone  Pclass_2  Pclass_3  SibSp_1  ...  new_family_size_7  \\\n","891              1         0         1        0  ...                  0   \n","892              0         0         1        1  ...                  0   \n","893              1         1         0        0  ...                  0   \n","894              1         0         1        0  ...                  0   \n","895              0         0         1        1  ...                  0   \n","...            ...       ...       ...      ...  ...                ...   \n","1304             1         0         1        0  ...                  0   \n","1305             1         0         0        0  ...                  0   \n","1306             1         0         1        0  ...                  0   \n","1307             1         0         1        0  ...                  0   \n","1308             0         0         1        1  ...                  0   \n","\n","      new_family_size_8  new_family_size_11  new_age_cat_senior  \\\n","891                   0                   0                   0   \n","892                   0                   0                   0   \n","893                   0                   0                   1   \n","894                   0                   0                   0   \n","895                   0                   0                   0   \n","...                 ...                 ...                 ...   \n","1304                  0                   0                   0   \n","1305                  0                   0                   0   \n","1306                  0                   0                   0   \n","1307                  0                   0                   0   \n","1308                  0                   0                   0   \n","\n","      new_age_cat_young  new_sex_cat_maturemale  new_sex_cat_seniorfemale  \\\n","891                   0                       1                         0   \n","892                   0                       0                         0   \n","893                   0                       0                         0   \n","894                   0                       1                         0   \n","895                   0                       0                         0   \n","...                 ...                     ...                       ...   \n","1304                  0                       1                         0   \n","1305                  0                       0                         0   \n","1306                  0                       1                         0   \n","1307                  0                       1                         0   \n","1308                  0                       1                         0   \n","\n","      new_sex_cat_seniormale  new_sex_cat_youngfemale  new_sex_cat_youngmale  \n","891                        0                        0                      0  \n","892                        0                        0                      0  \n","893                        1                        0                      0  \n","894                        0                        0                      0  \n","895                        0                        0                      0  \n","...                      ...                      ...                    ...  \n","1304                       0                        0                      0  \n","1305                       0                        0                      0  \n","1306                       0                        0                      0  \n","1307                       0                        0                      0  \n","1308                       0                        0                      0  \n","\n","[418 rows x 56 columns]"],"text/html":["\n","  <div id=\"df-51c44614-a43a-48ef-87b5-d92f34d37d87\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>new_cabin_bool</th>\n","      <th>new_age_pclass</th>\n","      <th>new_is_alone</th>\n","      <th>Pclass_2</th>\n","      <th>Pclass_3</th>\n","      <th>SibSp_1</th>\n","      <th>...</th>\n","      <th>new_family_size_7</th>\n","      <th>new_family_size_8</th>\n","      <th>new_family_size_11</th>\n","      <th>new_age_cat_senior</th>\n","      <th>new_age_cat_young</th>\n","      <th>new_sex_cat_maturemale</th>\n","      <th>new_sex_cat_seniorfemale</th>\n","      <th>new_sex_cat_seniormale</th>\n","      <th>new_sex_cat_youngfemale</th>\n","      <th>new_sex_cat_youngmale</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>891</th>\n","      <td>892</td>\n","      <td>1</td>\n","      <td>34.5</td>\n","      <td>7.8292</td>\n","      <td>0</td>\n","      <td>103.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>892</th>\n","      <td>893</td>\n","      <td>0</td>\n","      <td>47.0</td>\n","      <td>7.0000</td>\n","      <td>0</td>\n","      <td>141.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>893</th>\n","      <td>894</td>\n","      <td>1</td>\n","      <td>62.0</td>\n","      <td>9.6875</td>\n","      <td>0</td>\n","      <td>124.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>894</th>\n","      <td>895</td>\n","      <td>1</td>\n","      <td>27.0</td>\n","      <td>8.6625</td>\n","      <td>0</td>\n","      <td>81.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>895</th>\n","      <td>896</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>12.2875</td>\n","      <td>0</td>\n","      <td>66.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1304</th>\n","      <td>1305</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","      <td>75.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1305</th>\n","      <td>1306</td>\n","      <td>0</td>\n","      <td>39.0</td>\n","      <td>108.9000</td>\n","      <td>1</td>\n","      <td>39.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1306</th>\n","      <td>1307</td>\n","      <td>1</td>\n","      <td>38.5</td>\n","      <td>7.2500</td>\n","      <td>0</td>\n","      <td>115.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1307</th>\n","      <td>1308</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","      <td>75.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1308</th>\n","      <td>1309</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>22.3583</td>\n","      <td>0</td>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>418 rows × 56 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-51c44614-a43a-48ef-87b5-d92f34d37d87')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-51c44614-a43a-48ef-87b5-d92f34d37d87 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-51c44614-a43a-48ef-87b5-d92f34d37d87');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":104}]},{"cell_type":"code","source":["# selecting the independent and dependent variables\n","y_train = df_train['Survived']\n","X_train = df_train.drop(['PassengerId', 'Survived'], axis=1)\n","X_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"84N3iznkbJCI","executionInfo":{"status":"ok","timestamp":1669927317428,"user_tz":-60,"elapsed":708,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"35afc6be-373d-4181-9eed-46470e9fe709"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Sex   Age     Fare  new_cabin_bool  new_age_pclass  new_is_alone  \\\n","0      1  22.0   7.2500               0            66.0             0   \n","1      0  38.0  71.2833               1            38.0             0   \n","2      0  26.0   7.9250               0            78.0             1   \n","3      0  35.0  53.1000               1            35.0             0   \n","4      1  35.0   8.0500               0           105.0             1   \n","..   ...   ...      ...             ...             ...           ...   \n","886    1  27.0  13.0000               0            54.0             1   \n","887    0  19.0  30.0000               1            19.0             1   \n","888    0  22.0  23.4500               0            66.0             0   \n","889    1  26.0  30.0000               1            26.0             1   \n","890    1  32.0   7.7500               0            96.0             1   \n","\n","     Pclass_2  Pclass_3  SibSp_1  SibSp_2  ...  new_family_size_7  \\\n","0           0         1        1        0  ...                  0   \n","1           0         0        1        0  ...                  0   \n","2           0         1        0        0  ...                  0   \n","3           0         0        1        0  ...                  0   \n","4           0         1        0        0  ...                  0   \n","..        ...       ...      ...      ...  ...                ...   \n","886         1         0        0        0  ...                  0   \n","887         0         0        0        0  ...                  0   \n","888         0         1        1        0  ...                  0   \n","889         0         0        0        0  ...                  0   \n","890         0         1        0        0  ...                  0   \n","\n","     new_family_size_8  new_family_size_11  new_age_cat_senior  \\\n","0                    0                   0                   0   \n","1                    0                   0                   0   \n","2                    0                   0                   0   \n","3                    0                   0                   0   \n","4                    0                   0                   0   \n","..                 ...                 ...                 ...   \n","886                  0                   0                   0   \n","887                  0                   0                   0   \n","888                  0                   0                   0   \n","889                  0                   0                   0   \n","890                  0                   0                   0   \n","\n","     new_age_cat_young  new_sex_cat_maturemale  new_sex_cat_seniorfemale  \\\n","0                    0                       1                         0   \n","1                    0                       0                         0   \n","2                    0                       0                         0   \n","3                    0                       0                         0   \n","4                    0                       1                         0   \n","..                 ...                     ...                       ...   \n","886                  0                       1                         0   \n","887                  0                       0                         0   \n","888                  0                       0                         0   \n","889                  0                       1                         0   \n","890                  0                       1                         0   \n","\n","     new_sex_cat_seniormale  new_sex_cat_youngfemale  new_sex_cat_youngmale  \n","0                         0                        0                      0  \n","1                         0                        0                      0  \n","2                         0                        0                      0  \n","3                         0                        0                      0  \n","4                         0                        0                      0  \n","..                      ...                      ...                    ...  \n","886                       0                        0                      0  \n","887                       0                        1                      0  \n","888                       0                        0                      0  \n","889                       0                        0                      0  \n","890                       0                        0                      0  \n","\n","[891 rows x 55 columns]"],"text/html":["\n","  <div id=\"df-49ab27c7-4e0c-4193-9daa-f1f5b8bb9212\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>new_cabin_bool</th>\n","      <th>new_age_pclass</th>\n","      <th>new_is_alone</th>\n","      <th>Pclass_2</th>\n","      <th>Pclass_3</th>\n","      <th>SibSp_1</th>\n","      <th>SibSp_2</th>\n","      <th>...</th>\n","      <th>new_family_size_7</th>\n","      <th>new_family_size_8</th>\n","      <th>new_family_size_11</th>\n","      <th>new_age_cat_senior</th>\n","      <th>new_age_cat_young</th>\n","      <th>new_sex_cat_maturemale</th>\n","      <th>new_sex_cat_seniorfemale</th>\n","      <th>new_sex_cat_seniormale</th>\n","      <th>new_sex_cat_youngfemale</th>\n","      <th>new_sex_cat_youngmale</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>7.2500</td>\n","      <td>0</td>\n","      <td>66.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>38.0</td>\n","      <td>71.2833</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>26.0</td>\n","      <td>7.9250</td>\n","      <td>0</td>\n","      <td>78.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>53.1000</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","      <td>105.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>886</th>\n","      <td>1</td>\n","      <td>27.0</td>\n","      <td>13.0000</td>\n","      <td>0</td>\n","      <td>54.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>0</td>\n","      <td>19.0</td>\n","      <td>30.0000</td>\n","      <td>1</td>\n","      <td>19.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>23.4500</td>\n","      <td>0</td>\n","      <td>66.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>30.0000</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>1</td>\n","      <td>32.0</td>\n","      <td>7.7500</td>\n","      <td>0</td>\n","      <td>96.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>891 rows × 55 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-49ab27c7-4e0c-4193-9daa-f1f5b8bb9212')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-49ab27c7-4e0c-4193-9daa-f1f5b8bb9212 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-49ab27c7-4e0c-4193-9daa-f1f5b8bb9212');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":105}]},{"cell_type":"code","source":[],"metadata":{"id":"18Hdjj7ObN6K"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## LightGBM Model"],"metadata":{"id":"wZtLIYwObYci"}},{"cell_type":"code","source":["# model establishing\n","lgbm_model = LGBMClassifier(random_state=42).fit(X_train, y_train)\n","\n","# estimating the errors before hyperparameter optimization\n","lgbm_cv_results = cross_validate(lgbm_model, X_train, y_train, cv=10, scoring=['accuracy', 'f1', 'roc_auc'])\n","print('Accuracy:', lgbm_cv_results['test_accuracy'].mean())\n","print('F1 Score:', lgbm_cv_results['test_f1'].mean())\n","print('Roc Auc Score:', lgbm_cv_results['test_roc_auc'].mean())"],"metadata":{"id":"yeDD-Giwbbwe","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669927959643,"user_tz":-60,"elapsed":11,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"7a13a73b-1b39-44f7-c90d-0495606cfe32"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.817103620474407\n","F1 Score: 0.7507321876074355\n","Roc Auc Score: 0.866250657838893\n"]}]},{"cell_type":"code","source":["# hypreparameter optimization\n","print('--'*50)\n","print(lgbm_model.get_params())\n","print('--'*50)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3lfEO4DRd0dJ","executionInfo":{"status":"ok","timestamp":1669928016247,"user_tz":-60,"elapsed":10,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"61641f28-1506-474f-fa5d-f1cb2135532d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["----------------------------------------------------------------------------------------------------\n","{'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 42, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}\n","----------------------------------------------------------------------------------------------------\n"]}]},{"cell_type":"code","source":["lgbm_params = {'learning_rate': [0.01, 0.05, 0.1],\n","              'n_estimators': [100, 300, 500, 1000]}\n","\n","# Using GridSearchCv method\n","lgbm_best_grid = GridSearchCV(lgbm_model, lgbm_params, cv=10, n_jobs=-1, verbose=True).fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FKc6XpiweWtM","executionInfo":{"status":"ok","timestamp":1669928641148,"user_tz":-60,"elapsed":29749,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"136e9b74-574c-412e-e126-645efcc051ed"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 10 folds for each of 12 candidates, totalling 120 fits\n"]}]},{"cell_type":"code","source":["# final model\n","lgbm_final = lgbm_model.set_params(**lgbm_best_grid.best_params_, random_state=1).fit(X_train, y_train)"],"metadata":{"id":"lzd6jW3KhHeC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# estimating the errors after hyperparameter optimization\n","lgbm_cv_results = cross_validate(lgbm_final, X_train, y_train, cv=10, scoring=['accuracy', 'f1', 'roc_auc'])\n","print('Accuracy:', lgbm_cv_results['test_accuracy'].mean())\n","print('F1 Score:', lgbm_cv_results['test_f1'].mean())\n","print('Roc Auc Score:', lgbm_cv_results['test_roc_auc'].mean())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GFD5wZoLhVIJ","executionInfo":{"status":"ok","timestamp":1669928953730,"user_tz":-60,"elapsed":4630,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"098bbd27-a16a-4264-adf2-bcc699c11e60"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8339575530586766\n","F1 Score: 0.7721188021148977\n","Roc Auc Score: 0.8733266276207452\n"]}]},{"cell_type":"code","source":["# prediction\n","print('--'*50)\n","lgbm_final.predict(X_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xs3nTFBlhi3H","executionInfo":{"status":"ok","timestamp":1669928994010,"user_tz":-60,"elapsed":1164,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"2cf2e3b0-eac1-4b6b-a25f-5db45c1bd314"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["----------------------------------------------------------------------------------------------------\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0,\n","       1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,\n","       1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1,\n","       1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0,\n","       1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0,\n","       0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0,\n","       0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0,\n","       1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1,\n","       0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,\n","       1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1,\n","       0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n","       1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0,\n","       0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0,\n","       0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0,\n","       0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1,\n","       0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0,\n","       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n","       1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0,\n","       1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0,\n","       0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n","       1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n","       1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1,\n","       0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1,\n","       0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0,\n","       0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n","       0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n","       0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0,\n","       1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1,\n","       0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0,\n","       0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,\n","       0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1,\n","       0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0,\n","       1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1,\n","       1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0])"]},"metadata":{},"execution_count":113}]},{"cell_type":"code","source":[],"metadata":{"id":"HasaqnZdhtXa"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Random Forest Classififer"],"metadata":{"id":"dInrFgemhyho"}},{"cell_type":"code","source":["# model establishing\n","rf_model = RandomForestClassifier(random_state=42)\n","\n","# estimating the errors before hyperparameter optimization\n","rf_cv_results = cross_validate(rf_model, X_train, y_train, cv=10, scoring=['accuracy', 'f1', 'roc_auc'])\n","print('Accuracy:', rf_cv_results['test_accuracy'].mean())\n","print('F1 Score:', rf_cv_results['test_f1'].mean())\n","print('Roc Auc Score:', rf_cv_results['test_roc_auc'].mean())\n","\n","# hypreparameter optimization\n","print('--'*50)\n","print(rf_model.get_params())\n","print('--'*50)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c-vMJus2h4JF","executionInfo":{"status":"ok","timestamp":1669929476496,"user_tz":-60,"elapsed":2298,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"aa12ce43-aeae-4121-a56e-74323ec9970e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8126342072409487\n","F1 Score: 0.7498673206849383\n","Roc Auc Score: 0.8544446425034661\n","----------------------------------------------------------------------------------------------------\n","{'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': None, 'oob_score': False, 'random_state': 42, 'verbose': 0, 'warm_start': False}\n","----------------------------------------------------------------------------------------------------\n"]}]},{"cell_type":"code","source":["rf_params = {'max_depth': [5, 8, None],\n","             'max_features': [3, 5, 7, 'auto'],\n","            'min_samples_split': [2, 5, 8, 15, 20],\n","            'n_estimators': [100, 200, 500]}\n"],"metadata":{"id":"sUmicoebjpdq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Using GridSearchCv method\n","rf_best_grid = GridSearchCV(rf_model, rf_params, cv=10, n_jobs=-1, verbose=True).fit(X_train, y_train)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b48WgqI6jxZJ","executionInfo":{"status":"ok","timestamp":1669930520261,"user_tz":-60,"elapsed":759097,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"085b13b8-5a5d-4460-d2f5-5d4c0e6af4df"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 10 folds for each of 180 candidates, totalling 1800 fits\n"]}]},{"cell_type":"code","source":["# final model\n","rf_final = rf_model.set_params(**rf_best_grid.best_params_, random_state=42).fit(X_train, y_train)\n","\n","# estimating the errors after hyperparameter optimization\n","rf_cv_results = cross_validate(rf_final, X_train, y_train, cv=10, scoring=['accuracy', 'f1', 'roc_auc'])\n","print('Accuracy:', rf_cv_results['test_accuracy'].mean())\n","print('F1 Score:', rf_cv_results['test_f1'].mean())\n","print('Roc Auc Score:', rf_cv_results['test_roc_auc'].mean())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RSAnFtX7ncP3","executionInfo":{"status":"ok","timestamp":1669930597532,"user_tz":-60,"elapsed":2813,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"545d9914-6965-4dea-8b5e-feef5febdd51"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8361548064918851\n","F1 Score: 0.768692592032867\n","Roc Auc Score: 0.8740856463797642\n"]}]},{"cell_type":"code","source":["# prediction\n","print('--'*50)\n","rf_final.predict(X_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_um9xRaOnzb2","executionInfo":{"status":"ok","timestamp":1669930634399,"user_tz":-60,"elapsed":716,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"4582edd6-323e-4692-bc5f-1b1388f165c9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["----------------------------------------------------------------------------------------------------\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0,\n","       1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,\n","       1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1,\n","       1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0,\n","       1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n","       0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0,\n","       0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0,\n","       0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0,\n","       1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1,\n","       0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n","       1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1,\n","       0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n","       1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0,\n","       0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0,\n","       0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0,\n","       0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1,\n","       0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0,\n","       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n","       1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0,\n","       1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0,\n","       0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n","       0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n","       1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1,\n","       0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1,\n","       0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0,\n","       0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n","       0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0,\n","       0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0,\n","       1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,\n","       0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0,\n","       0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0,\n","       0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1,\n","       0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0,\n","       1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1,\n","       1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0])"]},"metadata":{},"execution_count":118}]},{"cell_type":"code","source":["df_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"YRaKU_nqn2V1","executionInfo":{"status":"ok","timestamp":1669930894512,"user_tz":-60,"elapsed":14,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"d448d60b-00d7-4637-c057-42a5cbcd8fa9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      PassengerId  Sex   Age      Fare  new_cabin_bool  new_age_pclass  \\\n","891           892    1  34.5    7.8292               0           103.5   \n","892           893    0  47.0    7.0000               0           141.0   \n","893           894    1  62.0    9.6875               0           124.0   \n","894           895    1  27.0    8.6625               0            81.0   \n","895           896    0  22.0   12.2875               0            66.0   \n","...           ...  ...   ...       ...             ...             ...   \n","1304         1305    1  25.0    8.0500               0            75.0   \n","1305         1306    0  39.0  108.9000               1            39.0   \n","1306         1307    1  38.5    7.2500               0           115.5   \n","1307         1308    1  25.0    8.0500               0            75.0   \n","1308         1309    1  25.0   22.3583               0            75.0   \n","\n","      new_is_alone  Pclass_2  Pclass_3  SibSp_1  ...  new_family_size_7  \\\n","891              1         0         1        0  ...                  0   \n","892              0         0         1        1  ...                  0   \n","893              1         1         0        0  ...                  0   \n","894              1         0         1        0  ...                  0   \n","895              0         0         1        1  ...                  0   \n","...            ...       ...       ...      ...  ...                ...   \n","1304             1         0         1        0  ...                  0   \n","1305             1         0         0        0  ...                  0   \n","1306             1         0         1        0  ...                  0   \n","1307             1         0         1        0  ...                  0   \n","1308             0         0         1        1  ...                  0   \n","\n","      new_family_size_8  new_family_size_11  new_age_cat_senior  \\\n","891                   0                   0                   0   \n","892                   0                   0                   0   \n","893                   0                   0                   1   \n","894                   0                   0                   0   \n","895                   0                   0                   0   \n","...                 ...                 ...                 ...   \n","1304                  0                   0                   0   \n","1305                  0                   0                   0   \n","1306                  0                   0                   0   \n","1307                  0                   0                   0   \n","1308                  0                   0                   0   \n","\n","      new_age_cat_young  new_sex_cat_maturemale  new_sex_cat_seniorfemale  \\\n","891                   0                       1                         0   \n","892                   0                       0                         0   \n","893                   0                       0                         0   \n","894                   0                       1                         0   \n","895                   0                       0                         0   \n","...                 ...                     ...                       ...   \n","1304                  0                       1                         0   \n","1305                  0                       0                         0   \n","1306                  0                       1                         0   \n","1307                  0                       1                         0   \n","1308                  0                       1                         0   \n","\n","      new_sex_cat_seniormale  new_sex_cat_youngfemale  new_sex_cat_youngmale  \n","891                        0                        0                      0  \n","892                        0                        0                      0  \n","893                        1                        0                      0  \n","894                        0                        0                      0  \n","895                        0                        0                      0  \n","...                      ...                      ...                    ...  \n","1304                       0                        0                      0  \n","1305                       0                        0                      0  \n","1306                       0                        0                      0  \n","1307                       0                        0                      0  \n","1308                       0                        0                      0  \n","\n","[418 rows x 56 columns]"],"text/html":["\n","  <div id=\"df-077cd57b-5a2d-403f-bda1-f19de6f3c4d6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>new_cabin_bool</th>\n","      <th>new_age_pclass</th>\n","      <th>new_is_alone</th>\n","      <th>Pclass_2</th>\n","      <th>Pclass_3</th>\n","      <th>SibSp_1</th>\n","      <th>...</th>\n","      <th>new_family_size_7</th>\n","      <th>new_family_size_8</th>\n","      <th>new_family_size_11</th>\n","      <th>new_age_cat_senior</th>\n","      <th>new_age_cat_young</th>\n","      <th>new_sex_cat_maturemale</th>\n","      <th>new_sex_cat_seniorfemale</th>\n","      <th>new_sex_cat_seniormale</th>\n","      <th>new_sex_cat_youngfemale</th>\n","      <th>new_sex_cat_youngmale</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>891</th>\n","      <td>892</td>\n","      <td>1</td>\n","      <td>34.5</td>\n","      <td>7.8292</td>\n","      <td>0</td>\n","      <td>103.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>892</th>\n","      <td>893</td>\n","      <td>0</td>\n","      <td>47.0</td>\n","      <td>7.0000</td>\n","      <td>0</td>\n","      <td>141.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>893</th>\n","      <td>894</td>\n","      <td>1</td>\n","      <td>62.0</td>\n","      <td>9.6875</td>\n","      <td>0</td>\n","      <td>124.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>894</th>\n","      <td>895</td>\n","      <td>1</td>\n","      <td>27.0</td>\n","      <td>8.6625</td>\n","      <td>0</td>\n","      <td>81.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>895</th>\n","      <td>896</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>12.2875</td>\n","      <td>0</td>\n","      <td>66.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1304</th>\n","      <td>1305</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","      <td>75.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1305</th>\n","      <td>1306</td>\n","      <td>0</td>\n","      <td>39.0</td>\n","      <td>108.9000</td>\n","      <td>1</td>\n","      <td>39.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1306</th>\n","      <td>1307</td>\n","      <td>1</td>\n","      <td>38.5</td>\n","      <td>7.2500</td>\n","      <td>0</td>\n","      <td>115.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1307</th>\n","      <td>1308</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","      <td>75.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1308</th>\n","      <td>1309</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>22.3583</td>\n","      <td>0</td>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>418 rows × 56 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-077cd57b-5a2d-403f-bda1-f19de6f3c4d6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-077cd57b-5a2d-403f-bda1-f19de6f3c4d6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-077cd57b-5a2d-403f-bda1-f19de6f3c4d6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":120}]},{"cell_type":"code","source":["df_test.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZqA798wZpG2q","executionInfo":{"status":"ok","timestamp":1669930975213,"user_tz":-60,"elapsed":13,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"edb2e650-6596-404c-aac5-087b5e9e692f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 418 entries, 891 to 1308\n","Data columns (total 56 columns):\n"," #   Column                    Non-Null Count  Dtype  \n","---  ------                    --------------  -----  \n"," 0   PassengerId               418 non-null    int64  \n"," 1   Sex                       418 non-null    int64  \n"," 2   Age                       418 non-null    float64\n"," 3   Fare                      418 non-null    float64\n"," 4   new_cabin_bool            418 non-null    int64  \n"," 5   new_age_pclass            418 non-null    float64\n"," 6   new_is_alone              418 non-null    int64  \n"," 7   Pclass_2                  418 non-null    uint8  \n"," 8   Pclass_3                  418 non-null    uint8  \n"," 9   SibSp_1                   418 non-null    uint8  \n"," 10  SibSp_2                   418 non-null    uint8  \n"," 11  SibSp_3                   418 non-null    uint8  \n"," 12  SibSp_4                   418 non-null    uint8  \n"," 13  SibSp_5                   418 non-null    uint8  \n"," 14  SibSp_8                   418 non-null    uint8  \n"," 15  Parch_1                   418 non-null    uint8  \n"," 16  Parch_2                   418 non-null    uint8  \n"," 17  Parch_3                   418 non-null    uint8  \n"," 18  Parch_4                   418 non-null    uint8  \n"," 19  Parch_5                   418 non-null    uint8  \n"," 20  Parch_6                   418 non-null    uint8  \n"," 21  Parch_9                   418 non-null    uint8  \n"," 22  Embarked_Q                418 non-null    uint8  \n"," 23  Embarked_S                418 non-null    uint8  \n"," 24  new_title_Col             418 non-null    uint8  \n"," 25  new_title_Countess        418 non-null    uint8  \n"," 26  new_title_Don             418 non-null    uint8  \n"," 27  new_title_Dona            418 non-null    uint8  \n"," 28  new_title_Dr              418 non-null    uint8  \n"," 29  new_title_Jonkheer        418 non-null    uint8  \n"," 30  new_title_Lady            418 non-null    uint8  \n"," 31  new_title_Major           418 non-null    uint8  \n"," 32  new_title_Master          418 non-null    uint8  \n"," 33  new_title_Miss            418 non-null    uint8  \n"," 34  new_title_Mlle            418 non-null    uint8  \n"," 35  new_title_Mme             418 non-null    uint8  \n"," 36  new_title_Mr              418 non-null    uint8  \n"," 37  new_title_Mrs             418 non-null    uint8  \n"," 38  new_title_Ms              418 non-null    uint8  \n"," 39  new_title_Rev             418 non-null    uint8  \n"," 40  new_title_Sir             418 non-null    uint8  \n"," 41  new_family_size_2         418 non-null    uint8  \n"," 42  new_family_size_3         418 non-null    uint8  \n"," 43  new_family_size_4         418 non-null    uint8  \n"," 44  new_family_size_5         418 non-null    uint8  \n"," 45  new_family_size_6         418 non-null    uint8  \n"," 46  new_family_size_7         418 non-null    uint8  \n"," 47  new_family_size_8         418 non-null    uint8  \n"," 48  new_family_size_11        418 non-null    uint8  \n"," 49  new_age_cat_senior        418 non-null    uint8  \n"," 50  new_age_cat_young         418 non-null    uint8  \n"," 51  new_sex_cat_maturemale    418 non-null    uint8  \n"," 52  new_sex_cat_seniorfemale  418 non-null    uint8  \n"," 53  new_sex_cat_seniormale    418 non-null    uint8  \n"," 54  new_sex_cat_youngfemale   418 non-null    uint8  \n"," 55  new_sex_cat_youngmale     418 non-null    uint8  \n","dtypes: float64(3), int64(4), uint8(49)\n","memory usage: 43.0 KB\n"]}]},{"cell_type":"code","source":["X_test = df_test.drop(['PassengerId'], axis = 1)\n","X_test.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"phw8ukrTpSwT","executionInfo":{"status":"ok","timestamp":1669931053210,"user_tz":-60,"elapsed":9,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"c07c6536-4ec0-429d-9505-b15708de6f5e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 418 entries, 891 to 1308\n","Data columns (total 55 columns):\n"," #   Column                    Non-Null Count  Dtype  \n","---  ------                    --------------  -----  \n"," 0   Sex                       418 non-null    int64  \n"," 1   Age                       418 non-null    float64\n"," 2   Fare                      418 non-null    float64\n"," 3   new_cabin_bool            418 non-null    int64  \n"," 4   new_age_pclass            418 non-null    float64\n"," 5   new_is_alone              418 non-null    int64  \n"," 6   Pclass_2                  418 non-null    uint8  \n"," 7   Pclass_3                  418 non-null    uint8  \n"," 8   SibSp_1                   418 non-null    uint8  \n"," 9   SibSp_2                   418 non-null    uint8  \n"," 10  SibSp_3                   418 non-null    uint8  \n"," 11  SibSp_4                   418 non-null    uint8  \n"," 12  SibSp_5                   418 non-null    uint8  \n"," 13  SibSp_8                   418 non-null    uint8  \n"," 14  Parch_1                   418 non-null    uint8  \n"," 15  Parch_2                   418 non-null    uint8  \n"," 16  Parch_3                   418 non-null    uint8  \n"," 17  Parch_4                   418 non-null    uint8  \n"," 18  Parch_5                   418 non-null    uint8  \n"," 19  Parch_6                   418 non-null    uint8  \n"," 20  Parch_9                   418 non-null    uint8  \n"," 21  Embarked_Q                418 non-null    uint8  \n"," 22  Embarked_S                418 non-null    uint8  \n"," 23  new_title_Col             418 non-null    uint8  \n"," 24  new_title_Countess        418 non-null    uint8  \n"," 25  new_title_Don             418 non-null    uint8  \n"," 26  new_title_Dona            418 non-null    uint8  \n"," 27  new_title_Dr              418 non-null    uint8  \n"," 28  new_title_Jonkheer        418 non-null    uint8  \n"," 29  new_title_Lady            418 non-null    uint8  \n"," 30  new_title_Major           418 non-null    uint8  \n"," 31  new_title_Master          418 non-null    uint8  \n"," 32  new_title_Miss            418 non-null    uint8  \n"," 33  new_title_Mlle            418 non-null    uint8  \n"," 34  new_title_Mme             418 non-null    uint8  \n"," 35  new_title_Mr              418 non-null    uint8  \n"," 36  new_title_Mrs             418 non-null    uint8  \n"," 37  new_title_Ms              418 non-null    uint8  \n"," 38  new_title_Rev             418 non-null    uint8  \n"," 39  new_title_Sir             418 non-null    uint8  \n"," 40  new_family_size_2         418 non-null    uint8  \n"," 41  new_family_size_3         418 non-null    uint8  \n"," 42  new_family_size_4         418 non-null    uint8  \n"," 43  new_family_size_5         418 non-null    uint8  \n"," 44  new_family_size_6         418 non-null    uint8  \n"," 45  new_family_size_7         418 non-null    uint8  \n"," 46  new_family_size_8         418 non-null    uint8  \n"," 47  new_family_size_11        418 non-null    uint8  \n"," 48  new_age_cat_senior        418 non-null    uint8  \n"," 49  new_age_cat_young         418 non-null    uint8  \n"," 50  new_sex_cat_maturemale    418 non-null    uint8  \n"," 51  new_sex_cat_seniorfemale  418 non-null    uint8  \n"," 52  new_sex_cat_seniormale    418 non-null    uint8  \n"," 53  new_sex_cat_youngfemale   418 non-null    uint8  \n"," 54  new_sex_cat_youngmale     418 non-null    uint8  \n","dtypes: float64(3), int64(3), uint8(49)\n","memory usage: 39.7 KB\n"]}]},{"cell_type":"code","source":["df_test['Survived'] = rf_final.predict(X_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OFQGy4zlpdB4","executionInfo":{"status":"ok","timestamp":1669931348005,"user_tz":-60,"elapsed":677,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"636ba9bf-47b3-47f7-9707-3858f35d5e56"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-124-f3af81c00c6a>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_test['Survived'] = rf_final.predict(X_test)\n"]}]},{"cell_type":"code","source":["df_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"qiZFXxo8qn-r","executionInfo":{"status":"ok","timestamp":1669931378740,"user_tz":-60,"elapsed":80,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"8e8ed57c-f5e2-4a4b-ceb8-d805f98a4d29"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      PassengerId  Sex   Age      Fare  new_cabin_bool  new_age_pclass  \\\n","891           892    1  34.5    7.8292               0           103.5   \n","892           893    0  47.0    7.0000               0           141.0   \n","893           894    1  62.0    9.6875               0           124.0   \n","894           895    1  27.0    8.6625               0            81.0   \n","895           896    0  22.0   12.2875               0            66.0   \n","...           ...  ...   ...       ...             ...             ...   \n","1304         1305    1  25.0    8.0500               0            75.0   \n","1305         1306    0  39.0  108.9000               1            39.0   \n","1306         1307    1  38.5    7.2500               0           115.5   \n","1307         1308    1  25.0    8.0500               0            75.0   \n","1308         1309    1  25.0   22.3583               0            75.0   \n","\n","      new_is_alone  Pclass_2  Pclass_3  SibSp_1  ...  new_family_size_8  \\\n","891              1         0         1        0  ...                  0   \n","892              0         0         1        1  ...                  0   \n","893              1         1         0        0  ...                  0   \n","894              1         0         1        0  ...                  0   \n","895              0         0         1        1  ...                  0   \n","...            ...       ...       ...      ...  ...                ...   \n","1304             1         0         1        0  ...                  0   \n","1305             1         0         0        0  ...                  0   \n","1306             1         0         1        0  ...                  0   \n","1307             1         0         1        0  ...                  0   \n","1308             0         0         1        1  ...                  0   \n","\n","      new_family_size_11  new_age_cat_senior  new_age_cat_young  \\\n","891                    0                   0                  0   \n","892                    0                   0                  0   \n","893                    0                   1                  0   \n","894                    0                   0                  0   \n","895                    0                   0                  0   \n","...                  ...                 ...                ...   \n","1304                   0                   0                  0   \n","1305                   0                   0                  0   \n","1306                   0                   0                  0   \n","1307                   0                   0                  0   \n","1308                   0                   0                  0   \n","\n","      new_sex_cat_maturemale  new_sex_cat_seniorfemale  \\\n","891                        1                         0   \n","892                        0                         0   \n","893                        0                         0   \n","894                        1                         0   \n","895                        0                         0   \n","...                      ...                       ...   \n","1304                       1                         0   \n","1305                       0                         0   \n","1306                       1                         0   \n","1307                       1                         0   \n","1308                       1                         0   \n","\n","      new_sex_cat_seniormale  new_sex_cat_youngfemale  new_sex_cat_youngmale  \\\n","891                        0                        0                      0   \n","892                        0                        0                      0   \n","893                        1                        0                      0   \n","894                        0                        0                      0   \n","895                        0                        0                      0   \n","...                      ...                      ...                    ...   \n","1304                       0                        0                      0   \n","1305                       0                        0                      0   \n","1306                       0                        0                      0   \n","1307                       0                        0                      0   \n","1308                       0                        0                      0   \n","\n","      Survived  \n","891          0  \n","892          0  \n","893          0  \n","894          0  \n","895          1  \n","...        ...  \n","1304         0  \n","1305         1  \n","1306         0  \n","1307         0  \n","1308         1  \n","\n","[418 rows x 57 columns]"],"text/html":["\n","  <div id=\"df-c9939f3c-8676-42ca-a1b7-c82399fd8d73\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>new_cabin_bool</th>\n","      <th>new_age_pclass</th>\n","      <th>new_is_alone</th>\n","      <th>Pclass_2</th>\n","      <th>Pclass_3</th>\n","      <th>SibSp_1</th>\n","      <th>...</th>\n","      <th>new_family_size_8</th>\n","      <th>new_family_size_11</th>\n","      <th>new_age_cat_senior</th>\n","      <th>new_age_cat_young</th>\n","      <th>new_sex_cat_maturemale</th>\n","      <th>new_sex_cat_seniorfemale</th>\n","      <th>new_sex_cat_seniormale</th>\n","      <th>new_sex_cat_youngfemale</th>\n","      <th>new_sex_cat_youngmale</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>891</th>\n","      <td>892</td>\n","      <td>1</td>\n","      <td>34.5</td>\n","      <td>7.8292</td>\n","      <td>0</td>\n","      <td>103.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>892</th>\n","      <td>893</td>\n","      <td>0</td>\n","      <td>47.0</td>\n","      <td>7.0000</td>\n","      <td>0</td>\n","      <td>141.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>893</th>\n","      <td>894</td>\n","      <td>1</td>\n","      <td>62.0</td>\n","      <td>9.6875</td>\n","      <td>0</td>\n","      <td>124.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>894</th>\n","      <td>895</td>\n","      <td>1</td>\n","      <td>27.0</td>\n","      <td>8.6625</td>\n","      <td>0</td>\n","      <td>81.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>895</th>\n","      <td>896</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>12.2875</td>\n","      <td>0</td>\n","      <td>66.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1304</th>\n","      <td>1305</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","      <td>75.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1305</th>\n","      <td>1306</td>\n","      <td>0</td>\n","      <td>39.0</td>\n","      <td>108.9000</td>\n","      <td>1</td>\n","      <td>39.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1306</th>\n","      <td>1307</td>\n","      <td>1</td>\n","      <td>38.5</td>\n","      <td>7.2500</td>\n","      <td>0</td>\n","      <td>115.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1307</th>\n","      <td>1308</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","      <td>75.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1308</th>\n","      <td>1309</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>22.3583</td>\n","      <td>0</td>\n","      <td>75.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>418 rows × 57 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9939f3c-8676-42ca-a1b7-c82399fd8d73')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c9939f3c-8676-42ca-a1b7-c82399fd8d73 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c9939f3c-8676-42ca-a1b7-c82399fd8d73');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":125}]},{"cell_type":"code","source":["submission_df = df_test[['PassengerId', 'Survived']]\n","submission_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"BNslofaxq1bh","executionInfo":{"status":"ok","timestamp":1669931435818,"user_tz":-60,"elapsed":549,"user":{"displayName":"Samuel Batubo","userId":"11002695844362247635"}},"outputId":"92d51cee-153f-4b92-fe75-884b13339aff"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId  Survived\n","891          892         0\n","892          893         0\n","893          894         0\n","894          895         0\n","895          896         1"],"text/html":["\n","  <div id=\"df-5fb5a72b-3980-4016-ab6f-a944588b98c6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>891</th>\n","      <td>892</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>892</th>\n","      <td>893</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>893</th>\n","      <td>894</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>894</th>\n","      <td>895</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>895</th>\n","      <td>896</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5fb5a72b-3980-4016-ab6f-a944588b98c6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5fb5a72b-3980-4016-ab6f-a944588b98c6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5fb5a72b-3980-4016-ab6f-a944588b98c6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":126}]},{"cell_type":"code","source":["submission_df.to_csv('Submission.csv', index=False)"],"metadata":{"id":"q34qZMsFq9AI"},"execution_count":null,"outputs":[]}]}